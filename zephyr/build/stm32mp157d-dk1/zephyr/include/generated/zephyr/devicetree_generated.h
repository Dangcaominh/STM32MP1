/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/dangcaominh/STM32MP1/zephyr/build/stm32mp157d-dk1/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /memory0@0
 *   5   /memory1@10000000
 *   6   /soc
 *   7   /soc/interrupt-controller@e000e100
 *   8   /soc/rcc@50000000
 *   9   /soc/pin-controller@50002000
 *   10  /soc/pin-controller@50002000/i2c5_scl_pa11
 *   11  /soc/pin-controller@50002000/i2c5_sda_pa12
 *   12  /soc/i2c@40015000
 *   13  /smbus5
 *   14  /cpus
 *   15  /cpus/cpu@0
 *   16  /soc/pin-controller@50002000/gpio@50002000
 *   17  /gpio_keys
 *   18  /gpio_keys/button
 *   19  /soc/pin-controller@50002000/gpio@50009000
 *   20  /leds
 *   21  /leds/led_1
 *   22  /soc/rcc@50000000/reset-controller
 *   23  /soc/display-controller@5a001000
 *   24  /soc/dma@48000000
 *   25  /soc/dma@48001000
 *   26  /soc/dmamux@48002000
 *   27  /soc/interrupt-controller@5000d000
 *   28  /soc/mailbox@4c001000
 *   29  /soc/serial@4000e000
 *   30  /soc/pin-controller@50002000/usart3_rx_pb12
 *   31  /soc/pin-controller@50002000/usart3_tx_pb10
 *   32  /soc/serial@4000f000
 *   33  /soc/serial@40010000
 *   34  /soc/serial@40011000
 *   35  /soc/pin-controller@50002000/uart7_rx_pe7
 *   36  /soc/pin-controller@50002000/uart7_tx_pe8
 *   37  /soc/serial@40018000
 *   38  /soc/serial@40019000
 *   39  /soc/serial@44003000
 *   40  /soc/spi@4000b000
 *   41  /soc/spi@4000c000
 *   42  /soc/spi@44004000
 *   43  /soc/pin-controller@50002000/spi4_miso_pe13
 *   44  /soc/pin-controller@50002000/spi4_mosi_pe14
 *   45  /soc/pin-controller@50002000/spi4_nss_pe11
 *   46  /soc/pin-controller@50002000/spi4_sck_pe12
 *   47  /soc/spi@44005000
 *   48  /soc/pin-controller@50002000/spi5_miso_pf8
 *   49  /soc/pin-controller@50002000/spi5_mosi_pf9
 *   50  /soc/pin-controller@50002000/spi5_nss_pf6
 *   51  /soc/pin-controller@50002000/spi5_sck_pf7
 *   52  /soc/spi@44009000
 *   53  /soc/timer@e000e010
 *   54  /soc/watchdog@4000a000
 *   55  /soc/pin-controller@50002000/gpio@50003000
 *   56  /soc/pin-controller@50002000/gpio@50004000
 *   57  /soc/pin-controller@50002000/gpio@50005000
 *   58  /soc/pin-controller@50002000/gpio@50006000
 *   59  /soc/pin-controller@50002000/gpio@50007000
 *   60  /soc/pin-controller@50002000/gpio@50008000
 *   61  /soc/pin-controller@50002000/gpio@5000a000
 *   62  /soc/pin-controller@50002000/gpio@5000b000
 *   63  /soc/pin-controller@50002000/gpio@5000c000
 *   64  /soc/timers@40001000
 *   65  /soc/timers@40001000/counter
 *   66  /soc/timers@40001000/pwm
 *   67  /soc/timers@40003000
 *   68  /soc/timers@40003000/counter
 *   69  /soc/timers@40003000/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 10
#define DT_N_CHILD_NUM_STATUS_OKAY 9
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory0_0) fn(DT_N_S_memory1_10000000) fn(DT_N_S_smbus5) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory0_0, __VA_ARGS__) fn(DT_N_S_memory1_10000000, __VA_ARGS__) fn(DT_N_S_smbus5, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory0_0) fn(DT_N_S_memory1_10000000) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory0_0, __VA_ARGS__) fn(DT_N_S_memory1_10000000, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory1_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /memory0@0 */ \
	5, /* /memory1@10000000 */ \
	6, /* /soc */ \
	13, /* /smbus5 */ \
	14, /* /cpus */ \
	17, /* /gpio_keys */ \
	20, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32mp157c_dk2 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_st_stm32mp157c_dk2 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "stm32mp157c-dk2"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32mp157c-dk2"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "st,stm32mp157c-dk2"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED st,stm32mp157c-dk2
#define DT_N_P_compatible_IDX_0_STRING_TOKEN st_stm32mp157c_dk2
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32MP157C_DK2
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-header-r3):
 *   $ZEPHYR_BASE/dts/bindings/gpio/arduino-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"
#define DT_N_S_connector_FULL_NAME_UNQUOTED connector
#define DT_N_S_connector_FULL_NAME_TOKEN connector
#define DT_N_S_connector_FULL_NAME_UPPER_TOKEN CONNECTOR

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_connector_NODELABEL_NUM 1
#define DT_N_S_connector_FOREACH_NODELABEL(fn) fn(arduino_header)
#define DT_N_S_connector_FOREACH_NODELABEL_VARGS(fn, ...) fn(arduino_header, __VA_ARGS__)
#define DT_N_S_connector_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_CHILD_NUM 0
#define DT_N_S_connector_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_connector_HASH 1hNYiTso4N65bku_L_0pzRcHL_5NCz8DqiXd1i5KK7Q

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_IRQ_LEVEL 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED arduino-header-r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_header_r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_HEADER_R3
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_zephyr_deferred_init 0
#define DT_N_S_connector_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory0@0
 *
 * Node identifier: DT_N_S_memory0_0
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory0_0_PATH "/memory0@0"

/* Node's name with unit-address: */
#define DT_N_S_memory0_0_FULL_NAME "memory0@0"
#define DT_N_S_memory0_0_FULL_NAME_UNQUOTED memory0@0
#define DT_N_S_memory0_0_FULL_NAME_TOKEN memory0_0
#define DT_N_S_memory0_0_FULL_NAME_UPPER_TOKEN MEMORY0_0

/* Node parent (/) identifier: */
#define DT_N_S_memory0_0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory0_0_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_memory0_0_NODELABEL_NUM 1
#define DT_N_S_memory0_0_FOREACH_NODELABEL(fn) fn(retram)
#define DT_N_S_memory0_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(retram, __VA_ARGS__)
#define DT_N_S_memory0_0_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory0_0_CHILD_NUM 0
#define DT_N_S_memory0_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory0_0_FOREACH_CHILD(fn) 
#define DT_N_S_memory0_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory0_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory0_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory0_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory0_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory0_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory0_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory0_0_HASH O3xbkq9kdDuO3opZJa7fha6cICA0IcSuH3jFGzG_Yxk

/* Node's dependency ordinal: */
#define DT_N_S_memory0_0_ORD 4
#define DT_N_S_memory0_0_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory0_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory0_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory0_0_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory0_0
#define DT_N_NODELABEL_retram DT_N_S_memory0_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory0_0_REG_NUM 1
#define DT_N_S_memory0_0_REG_IDX_0_EXISTS 1
#define DT_N_S_memory0_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_memory0_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_memory0_0_RANGES_NUM 0
#define DT_N_S_memory0_0_FOREACH_RANGE(fn) 
#define DT_N_S_memory0_0_IRQ_NUM 0
#define DT_N_S_memory0_0_IRQ_LEVEL 0
#define DT_N_S_memory0_0_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory0_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory0_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory0_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_memory0_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory0_0_P_reg_IDX_0 0
#define DT_N_S_memory0_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory0_0_P_reg_IDX_1 65536
#define DT_N_S_memory0_0_P_reg_EXISTS 1
#define DT_N_S_memory0_0_P_compatible {"mmio-sram"}
#define DT_N_S_memory0_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory0_0_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory0_0_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory0_0_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory0_0_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory0_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory0_0, compatible, 0)
#define DT_N_S_memory0_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory0_0, compatible, 0)
#define DT_N_S_memory0_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory0_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory0_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory0_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory0_0_P_compatible_LEN 1
#define DT_N_S_memory0_0_P_compatible_EXISTS 1
#define DT_N_S_memory0_0_P_zephyr_deferred_init 0
#define DT_N_S_memory0_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory0_0_P_wakeup_source 0
#define DT_N_S_memory0_0_P_wakeup_source_EXISTS 1
#define DT_N_S_memory0_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory0_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory1@10000000
 *
 * Node identifier: DT_N_S_memory1_10000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory1_10000000_PATH "/memory1@10000000"

/* Node's name with unit-address: */
#define DT_N_S_memory1_10000000_FULL_NAME "memory1@10000000"
#define DT_N_S_memory1_10000000_FULL_NAME_UNQUOTED memory1@10000000
#define DT_N_S_memory1_10000000_FULL_NAME_TOKEN memory1_10000000
#define DT_N_S_memory1_10000000_FULL_NAME_UPPER_TOKEN MEMORY1_10000000

/* Node parent (/) identifier: */
#define DT_N_S_memory1_10000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory1_10000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_memory1_10000000_NODELABEL_NUM 1
#define DT_N_S_memory1_10000000_FOREACH_NODELABEL(fn) fn(mcusram)
#define DT_N_S_memory1_10000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcusram, __VA_ARGS__)
#define DT_N_S_memory1_10000000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory1_10000000_CHILD_NUM 0
#define DT_N_S_memory1_10000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory1_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory1_10000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory1_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory1_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory1_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory1_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory1_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory1_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory1_10000000_HASH _HXyPzRbFTmQ0Yk1dkQd6C_hiDoi2USriHldIWzUxSk

/* Node's dependency ordinal: */
#define DT_N_S_memory1_10000000_ORD 5
#define DT_N_S_memory1_10000000_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory1_10000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory1_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory1_10000000_EXISTS 1
#define DT_N_INST_1_mmio_sram  DT_N_S_memory1_10000000
#define DT_N_NODELABEL_mcusram DT_N_S_memory1_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory1_10000000_REG_NUM 1
#define DT_N_S_memory1_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory1_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_memory1_10000000_REG_IDX_0_VAL_SIZE 327680 /* 0x50000 */
#define DT_N_S_memory1_10000000_RANGES_NUM 0
#define DT_N_S_memory1_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory1_10000000_IRQ_NUM 0
#define DT_N_S_memory1_10000000_IRQ_LEVEL 0
#define DT_N_S_memory1_10000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory1_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory1_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory1_10000000_P_reg {268435456 /* 0x10000000 */, 327680 /* 0x50000 */}
#define DT_N_S_memory1_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory1_10000000_P_reg_IDX_0 268435456
#define DT_N_S_memory1_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory1_10000000_P_reg_IDX_1 327680
#define DT_N_S_memory1_10000000_P_reg_EXISTS 1
#define DT_N_S_memory1_10000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory1_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory1_10000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory1_10000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory1_10000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory1_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory1_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory1_10000000, compatible, 0)
#define DT_N_S_memory1_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory1_10000000, compatible, 0)
#define DT_N_S_memory1_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory1_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory1_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory1_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory1_10000000_P_compatible_LEN 1
#define DT_N_S_memory1_10000000_P_compatible_EXISTS 1
#define DT_N_S_memory1_10000000_P_zephyr_deferred_init 0
#define DT_N_S_memory1_10000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory1_10000000_P_wakeup_source 0
#define DT_N_S_memory1_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory1_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory1_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 26
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 11
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_rcc_50000000) fn(DT_N_S_soc_S_interrupt_controller_5000d000) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc_S_watchdog_4000a000) fn(DT_N_S_soc_S_dma_48000000) fn(DT_N_S_soc_S_dma_48001000) fn(DT_N_S_soc_S_dmamux_48002000) fn(DT_N_S_soc_S_spi_44004000) fn(DT_N_S_soc_S_spi_4000b000) fn(DT_N_S_soc_S_spi_4000c000) fn(DT_N_S_soc_S_spi_44005000) fn(DT_N_S_soc_S_spi_44009000) fn(DT_N_S_soc_S_serial_4000e000) fn(DT_N_S_soc_S_serial_4000f000) fn(DT_N_S_soc_S_serial_40010000) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_44003000) fn(DT_N_S_soc_S_serial_40018000) fn(DT_N_S_soc_S_serial_40019000) fn(DT_N_S_soc_S_i2c_40015000) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40003000) fn(DT_N_S_soc_S_mailbox_4c001000) fn(DT_N_S_soc_S_display_controller_5a001000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_5000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_4000a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_48001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmamux_48002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_44003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mailbox_4c001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_display_controller_5a001000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_dmamux_48002000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_44003000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_mailbox_4c001000, __VA_ARGS__) fn(DT_N_S_soc_S_display_controller_5a001000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_4000a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_48001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmamux_48002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_44003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mailbox_4c001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_display_controller_5a001000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_rcc_50000000) fn(DT_N_S_soc_S_interrupt_controller_5000d000) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc_S_spi_44005000) fn(DT_N_S_soc_S_spi_44009000) fn(DT_N_S_soc_S_serial_4000f000) fn(DT_N_S_soc_S_serial_40018000) fn(DT_N_S_soc_S_i2c_40015000) fn(DT_N_S_soc_S_mailbox_4c001000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_5000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mailbox_4c001000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_mailbox_4c001000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mailbox_4c001000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 6
#define DT_N_S_soc_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */ \
	12, /* /soc/i2c@40015000 */ \
	23, /* /soc/display-controller@5a001000 */ \
	24, /* /soc/dma@48000000 */ \
	25, /* /soc/dma@48001000 */ \
	26, /* /soc/dmamux@48002000 */ \
	27, /* /soc/interrupt-controller@5000d000 */ \
	28, /* /soc/mailbox@4c001000 */ \
	29, /* /soc/serial@4000e000 */ \
	32, /* /soc/serial@4000f000 */ \
	33, /* /soc/serial@40010000 */ \
	34, /* /soc/serial@40011000 */ \
	37, /* /soc/serial@40018000 */ \
	38, /* /soc/serial@40019000 */ \
	39, /* /soc/serial@44003000 */ \
	40, /* /soc/spi@4000b000 */ \
	41, /* /soc/spi@4000c000 */ \
	42, /* /soc/spi@44004000 */ \
	47, /* /soc/spi@44005000 */ \
	52, /* /soc/spi@44009000 */ \
	53, /* /soc/timer@e000e010 */ \
	54, /* /soc/watchdog@4000a000 */ \
	64, /* /soc/timers@40001000 */ \
	67, /* /soc/timers@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_st_stm32mp157 DT_N_S_soc
#define DT_N_INST_0_st_stm32mp1   DT_N_S_soc
#define DT_N_INST_0_simple_bus    DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32mp157 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "stm32mp157"
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32mp1 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "stm32mp1"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_ranges_EXISTS 1
#define DT_N_S_soc_P_compatible {"st,stm32mp157", "st,stm32mp1", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "st,stm32mp157"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED st,stm32mp157
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN st_stm32mp157
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32MP157
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "st,stm32mp1"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED st,stm32mp1
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN st_stm32mp1
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32MP1
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 3
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_HASH MNKByYDCdVxyLwiy4A_bv2jZfVhfDT01mZ2_1uEhUYQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 7
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	12, /* /soc/i2c@40015000 */ \
	23, /* /soc/display-controller@5a001000 */ \
	24, /* /soc/dma@48000000 */ \
	25, /* /soc/dma@48001000 */ \
	26, /* /soc/dmamux@48002000 */ \
	27, /* /soc/interrupt-controller@5000d000 */ \
	28, /* /soc/mailbox@4c001000 */ \
	29, /* /soc/serial@4000e000 */ \
	32, /* /soc/serial@4000f000 */ \
	33, /* /soc/serial@40010000 */ \
	34, /* /soc/serial@40011000 */ \
	37, /* /soc/serial@40018000 */ \
	38, /* /soc/serial@40019000 */ \
	39, /* /soc/serial@44003000 */ \
	40, /* /soc/spi@4000b000 */ \
	41, /* /soc/spi@4000c000 */ \
	42, /* /soc/spi@44004000 */ \
	47, /* /soc/spi@44005000 */ \
	52, /* /soc/spi@44009000 */ \
	54, /* /soc/watchdog@4000a000 */ \
	64, /* /soc/timers@40001000 */ \
	67, /* /soc/timers@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rcc@50000000
 *
 * Node identifier: DT_N_S_soc_S_rcc_50000000
 *
 * Binding (compatible = st,stm32mp1-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32mp1-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_50000000_PATH "/soc/rcc@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_50000000_FULL_NAME "rcc@50000000"
#define DT_N_S_soc_S_rcc_50000000_FULL_NAME_UNQUOTED rcc@50000000
#define DT_N_S_soc_S_rcc_50000000_FULL_NAME_TOKEN rcc_50000000
#define DT_N_S_soc_S_rcc_50000000_FULL_NAME_UPPER_TOKEN RCC_50000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_50000000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_50000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_50000000_FOREACH_NODELABEL(fn) fn(rcc)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rcc, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_50000000_CHILD_NUM 1
#define DT_N_S_soc_S_rcc_50000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_rcc_50000000_HASH AbhqVd0v5ulQ_1JHQ2_NvLvOhw5_r1jO9hyn9EJitzs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_50000000_ORD 8
#define DT_N_S_soc_S_rcc_50000000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_50000000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_50000000_SUPPORTS_ORDS \
	12, /* /soc/i2c@40015000 */ \
	16, /* /soc/pin-controller@50002000/gpio@50002000 */ \
	19, /* /soc/pin-controller@50002000/gpio@50009000 */ \
	22, /* /soc/rcc@50000000/reset-controller */ \
	23, /* /soc/display-controller@5a001000 */ \
	24, /* /soc/dma@48000000 */ \
	25, /* /soc/dma@48001000 */ \
	26, /* /soc/dmamux@48002000 */ \
	27, /* /soc/interrupt-controller@5000d000 */ \
	28, /* /soc/mailbox@4c001000 */ \
	29, /* /soc/serial@4000e000 */ \
	32, /* /soc/serial@4000f000 */ \
	33, /* /soc/serial@40010000 */ \
	34, /* /soc/serial@40011000 */ \
	37, /* /soc/serial@40018000 */ \
	38, /* /soc/serial@40019000 */ \
	39, /* /soc/serial@44003000 */ \
	40, /* /soc/spi@4000b000 */ \
	41, /* /soc/spi@4000c000 */ \
	42, /* /soc/spi@44004000 */ \
	47, /* /soc/spi@44005000 */ \
	52, /* /soc/spi@44009000 */ \
	54, /* /soc/watchdog@4000a000 */ \
	55, /* /soc/pin-controller@50002000/gpio@50003000 */ \
	56, /* /soc/pin-controller@50002000/gpio@50004000 */ \
	57, /* /soc/pin-controller@50002000/gpio@50005000 */ \
	58, /* /soc/pin-controller@50002000/gpio@50006000 */ \
	59, /* /soc/pin-controller@50002000/gpio@50007000 */ \
	60, /* /soc/pin-controller@50002000/gpio@50008000 */ \
	61, /* /soc/pin-controller@50002000/gpio@5000a000 */ \
	62, /* /soc/pin-controller@50002000/gpio@5000b000 */ \
	63, /* /soc/pin-controller@50002000/gpio@5000c000 */ \
	64, /* /soc/timers@40001000 */ \
	67, /* /soc/timers@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32mp1_rcc DT_N_S_soc_S_rcc_50000000
#define DT_N_NODELABEL_rcc          DT_N_S_soc_S_rcc_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_50000000_REG_NUM 1
#define DT_N_S_soc_S_rcc_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_rcc_50000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rcc_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_50000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_50000000_COMPAT_MATCHES_st_stm32mp1_rcc 1
#define DT_N_S_soc_S_rcc_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_COMPAT_MODEL_IDX_0 "stm32mp1-rcc"
#define DT_N_S_soc_S_rcc_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_50000000_P_reg {1342177280 /* 0x50000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rcc_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_rcc_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rcc_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_clock_frequency 209000000
#define DT_N_S_soc_S_rcc_50000000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_compatible {"st,stm32mp1-rcc"}
#define DT_N_S_soc_S_rcc_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_compatible_IDX_0 "st,stm32mp1-rcc"
#define DT_N_S_soc_S_rcc_50000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32mp1-rcc
#define DT_N_S_soc_S_rcc_50000000_P_compatible_IDX_0_STRING_TOKEN st_stm32mp1_rcc
#define DT_N_S_soc_S_rcc_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32MP1_RCC
#define DT_N_S_soc_S_rcc_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_50000000, compatible, 0)
#define DT_N_S_soc_S_rcc_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_50000000, compatible, 0)
#define DT_N_S_soc_S_rcc_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_50000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_PATH "/soc/pin-controller@50002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_FULL_NAME "pin-controller@50002000"
#define DT_N_S_soc_S_pin_controller_50002000_FULL_NAME_UNQUOTED pin-controller@50002000
#define DT_N_S_soc_S_pin_controller_50002000_FULL_NAME_TOKEN pin_controller_50002000
#define DT_N_S_soc_S_pin_controller_50002000_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER_50002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_CHILD_NUM 25
#define DT_N_S_soc_S_pin_controller_50002000_CHILD_NUM_STATUS_OKAY 25
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_HASH uVg39_nBeQjirENbdONLufKIdEfXmlyq3W_OoS7HhZM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_ORD 9
#define DT_N_S_soc_S_pin_controller_50002000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_SUPPORTS_ORDS \
	10, /* /soc/pin-controller@50002000/i2c5_scl_pa11 */ \
	11, /* /soc/pin-controller@50002000/i2c5_sda_pa12 */ \
	16, /* /soc/pin-controller@50002000/gpio@50002000 */ \
	19, /* /soc/pin-controller@50002000/gpio@50009000 */ \
	30, /* /soc/pin-controller@50002000/usart3_rx_pb12 */ \
	31, /* /soc/pin-controller@50002000/usart3_tx_pb10 */ \
	35, /* /soc/pin-controller@50002000/uart7_rx_pe7 */ \
	36, /* /soc/pin-controller@50002000/uart7_tx_pe8 */ \
	43, /* /soc/pin-controller@50002000/spi4_miso_pe13 */ \
	44, /* /soc/pin-controller@50002000/spi4_mosi_pe14 */ \
	45, /* /soc/pin-controller@50002000/spi4_nss_pe11 */ \
	46, /* /soc/pin-controller@50002000/spi4_sck_pe12 */ \
	48, /* /soc/pin-controller@50002000/spi5_miso_pf8 */ \
	49, /* /soc/pin-controller@50002000/spi5_mosi_pf9 */ \
	50, /* /soc/pin-controller@50002000/spi5_nss_pf6 */ \
	51, /* /soc/pin-controller@50002000/spi5_sck_pf7 */ \
	55, /* /soc/pin-controller@50002000/gpio@50003000 */ \
	56, /* /soc/pin-controller@50002000/gpio@50004000 */ \
	57, /* /soc/pin-controller@50002000/gpio@50005000 */ \
	58, /* /soc/pin-controller@50002000/gpio@50006000 */ \
	59, /* /soc/pin-controller@50002000/gpio@50007000 */ \
	60, /* /soc/pin-controller@50002000/gpio@50008000 */ \
	61, /* /soc/pin-controller@50002000/gpio@5000a000 */ \
	62, /* /soc/pin-controller@50002000/gpio@5000b000 */ \
	63, /* /soc/pin-controller@50002000/gpio@5000c000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_50002000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_50002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_REG_IDX_0_VAL_ADDRESS 1342185472 /* 0x50002000 */
#define DT_N_S_soc_S_pin_controller_50002000_REG_IDX_0_VAL_SIZE 36864 /* 0x9000 */
#define DT_N_S_soc_S_pin_controller_50002000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_50002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_COMPAT_MODEL_IDX_0 "stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_50002000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_P_reg {1342185472 /* 0x50002000 */, 36864 /* 0x9000 */}
#define DT_N_S_soc_S_pin_controller_50002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_reg_IDX_0 1342185472
#define DT_N_S_soc_S_pin_controller_50002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_reg_IDX_1 36864
#define DT_N_S_soc_S_pin_controller_50002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_50002000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_50002000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_50002000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pinctrl
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_IDX_0_STRING_TOKEN st_stm32_pinctrl
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PINCTRL
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/i2c5_scl_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_PATH "/soc/pin-controller@50002000/i2c5_scl_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FULL_NAME "i2c5_scl_pa11"
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FULL_NAME_UNQUOTED i2c5_scl_pa11
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FULL_NAME_TOKEN i2c5_scl_pa11
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FULL_NAME_UPPER_TOKEN I2C5_SCL_PA11

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_NODELABEL(fn) fn(i2c5_scl_pa11)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c5_scl_pa11, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_HASH I6t_XCPbRKlCXGOWc6B_W0p4fOXMpa8QLtLnobcrBXQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_ORD 10
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_SUPPORTS_ORDS \
	12, /* /soc/i2c@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_EXISTS 1
#define DT_N_NODELABEL_i2c5_scl_pa11 DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_pinmux 356
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/i2c5_sda_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_PATH "/soc/pin-controller@50002000/i2c5_sda_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FULL_NAME "i2c5_sda_pa12"
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FULL_NAME_UNQUOTED i2c5_sda_pa12
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FULL_NAME_TOKEN i2c5_sda_pa12
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FULL_NAME_UPPER_TOKEN I2C5_SDA_PA12

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_NODELABEL(fn) fn(i2c5_sda_pa12)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c5_sda_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_HASH RkrxO8BQ1aJukAQiGQ0xXuOqn2vPGTxgedJcqie7Vlk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_ORD 11
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_SUPPORTS_ORDS \
	12, /* /soc/i2c@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_EXISTS 1
#define DT_N_NODELABEL_i2c5_sda_pa12 DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_pinmux 388
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40015000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40015000
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40015000_PATH "/soc/i2c@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40015000_FULL_NAME "i2c@40015000"
#define DT_N_S_soc_S_i2c_40015000_FULL_NAME_UNQUOTED i2c@40015000
#define DT_N_S_soc_S_i2c_40015000_FULL_NAME_TOKEN i2c_40015000
#define DT_N_S_soc_S_i2c_40015000_FULL_NAME_UPPER_TOKEN I2C_40015000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40015000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40015000_NODELABEL_NUM 2
#define DT_N_S_soc_S_i2c_40015000_FOREACH_NODELABEL(fn) fn(i2c5) fn(arduino_i2c)
#define DT_N_S_soc_S_i2c_40015000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c5, __VA_ARGS__) fn(arduino_i2c, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40015000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40015000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40015000_HASH SemPGCDkjc7pjP8d6JKail1n392rNWD_bBX4ZxrQQsc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40015000_ORD 12
#define DT_N_S_soc_S_i2c_40015000_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40015000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	10, /* /soc/pin-controller@50002000/i2c5_scl_pa11 */ \
	11, /* /soc/pin-controller@50002000/i2c5_sda_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40015000_SUPPORTS_ORDS \
	13, /* /smbus5 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40015000_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40015000
#define DT_N_NODELABEL_i2c5         DT_N_S_soc_S_i2c_40015000
#define DT_N_NODELABEL_arduino_i2c  DT_N_S_soc_S_i2c_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40015000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_i2c_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40015000_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_VAL_irq 107
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_VAL_irq 108
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40015000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40015000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40015000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40015000_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40015000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11
#define DT_N_S_soc_S_i2c_40015000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_i2c_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupts {107 /* 0x6b */, 0 /* 0x0 */, 108 /* 0x6c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_0 107
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_2 108
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40015000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40015000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40015000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40015000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40015000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40015000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_status "okay"
#define DT_N_S_soc_S_i2c_40015000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40015000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40015000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40015000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40015000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40015000, status, 0)
#define DT_N_S_soc_S_i2c_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40015000, status, 0)
#define DT_N_S_soc_S_i2c_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40015000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40015000_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40015000, compatible, 0)
#define DT_N_S_soc_S_i2c_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40015000, compatible, 0)
#define DT_N_S_soc_S_i2c_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40015000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40015000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_i2c_40015000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_clocks_IDX_0_VAL_bits 16777216
#define DT_N_S_soc_S_i2c_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40015000, clocks, 0)
#define DT_N_S_soc_S_i2c_40015000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40015000, clocks, 0)
#define DT_N_S_soc_S_i2c_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40015000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /smbus5
 *
 * Node identifier: DT_N_S_smbus5
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE/dts/bindings/smbus/st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus5_PATH "/smbus5"

/* Node's name with unit-address: */
#define DT_N_S_smbus5_FULL_NAME "smbus5"
#define DT_N_S_smbus5_FULL_NAME_UNQUOTED smbus5
#define DT_N_S_smbus5_FULL_NAME_TOKEN smbus5
#define DT_N_S_smbus5_FULL_NAME_UPPER_TOKEN SMBUS5

/* Node parent (/) identifier: */
#define DT_N_S_smbus5_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus5_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus5_NODELABEL_NUM 1
#define DT_N_S_smbus5_FOREACH_NODELABEL(fn) fn(smbus5)
#define DT_N_S_smbus5_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus5, __VA_ARGS__)
#define DT_N_S_smbus5_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus5_CHILD_NUM 0
#define DT_N_S_smbus5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus5_FOREACH_CHILD(fn) 
#define DT_N_S_smbus5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_smbus5_HASH bNx8hcqR9R2DMA7dYUNXXpTQtE7jiZvBBHOCCGg_YY8

/* Node's dependency ordinal: */
#define DT_N_S_smbus5_ORD 13
#define DT_N_S_smbus5_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus5_REQUIRES_ORDS \
	0, /* / */ \
	12, /* /soc/i2c@40015000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus5_EXISTS 1
#define DT_N_INST_0_st_stm32_smbus DT_N_S_smbus5
#define DT_N_NODELABEL_smbus5      DT_N_S_smbus5

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus5_REG_NUM 0
#define DT_N_S_smbus5_RANGES_NUM 0
#define DT_N_S_smbus5_FOREACH_RANGE(fn) 
#define DT_N_S_smbus5_IRQ_NUM 0
#define DT_N_S_smbus5_IRQ_LEVEL 0
#define DT_N_S_smbus5_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus5_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus5_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus5_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus5_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus5_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus5_P_i2c DT_N_S_soc_S_i2c_40015000
#define DT_N_S_smbus5_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40015000
#define DT_N_S_smbus5_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40015000
#define DT_N_S_smbus5_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus5_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus5, i2c, 0)
#define DT_N_S_smbus5_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus5, i2c, 0)
#define DT_N_S_smbus5_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus5, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus5_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus5, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus5_P_i2c_LEN 1
#define DT_N_S_smbus5_P_i2c_EXISTS 1
#define DT_N_S_smbus5_P_status "disabled"
#define DT_N_S_smbus5_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus5_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus5_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus5_P_status_IDX_0 "disabled"
#define DT_N_S_smbus5_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus5_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_smbus5_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus5_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus5_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus5, status, 0)
#define DT_N_S_smbus5_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus5, status, 0)
#define DT_N_S_smbus5_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus5, status, 0, __VA_ARGS__)
#define DT_N_S_smbus5_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus5, status, 0, __VA_ARGS__)
#define DT_N_S_smbus5_P_status_LEN 1
#define DT_N_S_smbus5_P_status_EXISTS 1
#define DT_N_S_smbus5_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus5_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus5_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus5_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus5_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus5_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus5_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus5, compatible, 0)
#define DT_N_S_smbus5_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus5, compatible, 0)
#define DT_N_S_smbus5_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus5, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus5_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus5, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus5_P_compatible_LEN 1
#define DT_N_S_smbus5_P_compatible_EXISTS 1
#define DT_N_S_smbus5_P_zephyr_deferred_init 0
#define DT_N_S_smbus5_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus5_P_wakeup_source 0
#define DT_N_S_smbus5_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus5_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus5_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 14
#define DT_N_S_cpus_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	15, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 15
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	14, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0       DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50002000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_PATH "/soc/pin-controller@50002000/gpio@50002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FULL_NAME "gpio@50002000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FULL_NAME_UNQUOTED gpio@50002000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FULL_NAME_TOKEN gpio_50002000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FULL_NAME_UPPER_TOKEN GPIO_50002000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_NODELABEL(fn) fn(gpioa)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioa, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_HASH U42QIoEZN_QwuWX8ajbd0UuenBDwlU9OHvvnKUIc1Kc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_ORD 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_SUPPORTS_ORDS \
	17, /* /gpio_keys */ \
	18, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_REG_IDX_0_VAL_ADDRESS 1342185472 /* 0x50002000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_reg {1342185472 /* 0x50002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_reg_IDX_0 1342185472
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"
#define DT_N_S_gpio_keys_FULL_NAME_UNQUOTED gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_TOKEN gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_UPPER_TOKEN GPIO_KEYS

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_NODELABEL_NUM 0
#define DT_N_S_gpio_keys_FOREACH_NODELABEL(fn) 
#define DT_N_S_gpio_keys_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_CHILD_NUM 1
#define DT_N_S_gpio_keys_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_gpio_keys_HASH o_cyM_1oGxkDdZvjWwmF_qWSV_TFQR0RmVqGE69cQ78

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 17
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */ \
	16, /* /soc/pin-controller@50002000/gpio@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	18, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_polling_mode 0
#define DT_N_S_gpio_keys_P_polling_mode_EXISTS 1
#define DT_N_S_gpio_keys_P_no_disconnect 0
#define DT_N_S_gpio_keys_P_no_disconnect_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_deferred_init 0
#define DT_N_S_gpio_keys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"
#define DT_N_S_gpio_keys_S_button_FULL_NAME_UNQUOTED button
#define DT_N_S_gpio_keys_S_button_FULL_NAME_TOKEN button
#define DT_N_S_gpio_keys_S_button_FULL_NAME_UPPER_TOKEN BUTTON

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_FOREACH_NODELABEL(fn) fn(user_button)
#define DT_N_S_gpio_keys_S_button_FOREACH_NODELABEL_VARGS(fn, ...) fn(user_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_HASH xGyp172f7ymL2kzXZ3NEGIppYDK1YGb1Ay3RG1U6EkA

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 18
#define DT_N_S_gpio_keys_S_button_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	16, /* /soc/pin-controller@50002000/gpio@50002000 */ \
	17, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "User 1"
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UNQUOTED User 1
#define DT_N_S_gpio_keys_S_button_P_label_STRING_TOKEN User_1
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UPPER_TOKEN USER_1
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0 "User 1"
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_button_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50009000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_PATH "/soc/pin-controller@50002000/gpio@50009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FULL_NAME "gpio@50009000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FULL_NAME_UNQUOTED gpio@50009000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FULL_NAME_TOKEN gpio_50009000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FULL_NAME_UPPER_TOKEN GPIO_50009000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_NODELABEL(fn) fn(gpioh)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioh, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_HASH PJSji00vgnDaJrDLqgXhvrruLHMC3Xe0k2MP_6Ofn60

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_ORD 19
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_SUPPORTS_ORDS \
	20, /* /leds */ \
	21, /* /leds/led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_REG_IDX_0_VAL_ADDRESS 1342214144 /* 0x50009000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_reg {1342214144 /* 0x50009000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_reg_IDX_0 1342214144
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 1
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 20
#define DT_N_S_leds_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	19, /* /soc/pin-controller@50002000/gpio@50009000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	21, /* /leds/led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"
#define DT_N_S_leds_S_led_1_FULL_NAME_UNQUOTED led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_TOKEN led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_UPPER_TOKEN LED_1

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_1_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL(fn) fn(red_led_1)
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(red_led_1, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_CHILD_NUM 0
#define DT_N_S_leds_S_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_1_HASH iXGpSU4KdWdLNkNXyuDlz5Q9aavHPvjTPItAJ_Q0T5c

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 21
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	19, /* /soc/pin-controller@50002000/gpio@50009000 */ \
	20, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0          DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_red_led_1 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "LD7"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED LD7
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN LD7
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN LD7
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "LD7"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /soc/rcc@50000000/reset-controller
 *
 * Node identifier: DT_N_S_soc_S_rcc_50000000_S_reset_controller
 *
 * Binding (compatible = st,stm32-rcc-rctl):
 *   $ZEPHYR_BASE/dts/bindings/reset/st,stm32-rcc-rctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_PATH "/soc/rcc@50000000/reset-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FULL_NAME "reset-controller"
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FULL_NAME_UNQUOTED reset-controller
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FULL_NAME_TOKEN reset_controller
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FULL_NAME_UPPER_TOKEN RESET_CONTROLLER

/* Node parent (/soc/rcc@50000000) identifier: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_PARENT DT_N_S_soc_S_rcc_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_NODELABEL(fn) fn(rctl)
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(rctl, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_rcc_50000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_CHILD_NUM 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_HASH ZAMKTB6q5lTKAjn4A2XX9dFOhZRIld2RyFlEdodRj6s

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_ORD 22
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_SUPPORTS_ORDS \
	23, /* /soc/display-controller@5a001000 */ \
	29, /* /soc/serial@4000e000 */ \
	32, /* /soc/serial@4000f000 */ \
	33, /* /soc/serial@40010000 */ \
	34, /* /soc/serial@40011000 */ \
	37, /* /soc/serial@40018000 */ \
	38, /* /soc/serial@40019000 */ \
	39, /* /soc/serial@44003000 */ \
	64, /* /soc/timers@40001000 */ \
	67, /* /soc/timers@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc_rctl DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_NODELABEL_rctl           DT_N_S_soc_S_rcc_50000000_S_reset_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_REG_NUM 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_COMPAT_MATCHES_st_stm32_rcc_rctl 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_COMPAT_MODEL_IDX_0 "stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_set_bit_to_deassert 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_set_bit_to_deassert_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible {"st,stm32-rcc-rctl"}
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_IDX_0 "st,stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rcc-rctl
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc_rctl
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC_RCTL
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_50000000_S_reset_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/display-controller@5a001000
 *
 * Node identifier: DT_N_S_soc_S_display_controller_5a001000
 *
 * Binding (compatible = st,stm32-ltdc):
 *   $ZEPHYR_BASE/dts/bindings/display/st,stm32-ltdc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_display_controller_5a001000_PATH "/soc/display-controller@5a001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_display_controller_5a001000_FULL_NAME "display-controller@5a001000"
#define DT_N_S_soc_S_display_controller_5a001000_FULL_NAME_UNQUOTED display-controller@5a001000
#define DT_N_S_soc_S_display_controller_5a001000_FULL_NAME_TOKEN display_controller_5a001000
#define DT_N_S_soc_S_display_controller_5a001000_FULL_NAME_UPPER_TOKEN DISPLAY_CONTROLLER_5A001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_display_controller_5a001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_display_controller_5a001000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_display_controller_5a001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_NODELABEL(fn) fn(ltdc)
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ltdc, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_display_controller_5a001000_CHILD_NUM 0
#define DT_N_S_soc_S_display_controller_5a001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_display_controller_5a001000_HASH cvXs_UPpMUc8vujz7M5Zx24uCfVD_sUBoBMLUqELSKM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_display_controller_5a001000_ORD 23
#define DT_N_S_soc_S_display_controller_5a001000_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_display_controller_5a001000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_display_controller_5a001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_display_controller_5a001000_EXISTS 1
#define DT_N_INST_0_st_stm32_ltdc DT_N_S_soc_S_display_controller_5a001000
#define DT_N_NODELABEL_ltdc       DT_N_S_soc_S_display_controller_5a001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_display_controller_5a001000_REG_NUM 1
#define DT_N_S_soc_S_display_controller_5a001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_REG_IDX_0_VAL_ADDRESS 1509953536 /* 0x5a001000 */
#define DT_N_S_soc_S_display_controller_5a001000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_display_controller_5a001000_RANGES_NUM 0
#define DT_N_S_soc_S_display_controller_5a001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NUM 2
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_VAL_irq 88
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_VAL_irq 89
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_VAL_irq DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_VAL_priority DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_CONTROLLER DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_er_VAL_irq DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_er_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_er_VAL_priority DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_er_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_IRQ_NAME_ltdc_er_CONTROLLER DT_N_S_soc_S_display_controller_5a001000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_display_controller_5a001000_COMPAT_MATCHES_st_stm32_ltdc 1
#define DT_N_S_soc_S_display_controller_5a001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_display_controller_5a001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_COMPAT_MODEL_IDX_0 "stm32-ltdc"
#define DT_N_S_soc_S_display_controller_5a001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_display_controller_5a001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_IDX_0_VAL_bus 11
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_5a001000, clocks, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_5a001000, clocks, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_5a001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_5a001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_LEN 1
#define DT_N_S_soc_S_display_controller_5a001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_IDX_0_VAL_id 50868250
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_5a001000, resets, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_5a001000, resets, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_5a001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_5a001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_LEN 1
#define DT_N_S_soc_S_display_controller_5a001000_P_resets_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts {88 /* 0x58 */, 0 /* 0x0 */, 89 /* 0x59 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_0 88
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_2 89
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_status "disabled"
#define DT_N_S_soc_S_display_controller_5a001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_display_controller_5a001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_display_controller_5a001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_display_controller_5a001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_display_controller_5a001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_display_controller_5a001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_5a001000, status, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_5a001000, status, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_5a001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_5a001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_status_LEN 1
#define DT_N_S_soc_S_display_controller_5a001000_P_status_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible {"st,stm32-ltdc"}
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_IDX_0 "st,stm32-ltdc"
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-ltdc
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_ltdc
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LTDC
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_5a001000, compatible, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_5a001000, compatible, 0)
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_5a001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_5a001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_LEN 1
#define DT_N_S_soc_S_display_controller_5a001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_reg {1509953536 /* 0x5a001000 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_display_controller_5a001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_reg_IDX_0 1509953536
#define DT_N_S_soc_S_display_controller_5a001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_reg_IDX_1 512
#define DT_N_S_soc_S_display_controller_5a001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names {"ltdc", "ltdc_er"}
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_0 "ltdc"
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_0_STRING_UNQUOTED ltdc
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_0_STRING_TOKEN ltdc
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LTDC
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_1 "ltdc_er"
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_1_STRING_UNQUOTED ltdc_er
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_1_STRING_TOKEN ltdc_er
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LTDC_ER
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 1)
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 1)
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_5a001000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_display_controller_5a001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_display_controller_5a001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_wakeup_source 0
#define DT_N_S_soc_S_display_controller_5a001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_display_controller_5a001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_display_controller_5a001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@48000000
 *
 * Node identifier: DT_N_S_soc_S_dma_48000000
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_48000000_PATH "/soc/dma@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_48000000_FULL_NAME "dma@48000000"
#define DT_N_S_soc_S_dma_48000000_FULL_NAME_UNQUOTED dma@48000000
#define DT_N_S_soc_S_dma_48000000_FULL_NAME_TOKEN dma_48000000
#define DT_N_S_soc_S_dma_48000000_FULL_NAME_UPPER_TOKEN DMA_48000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_48000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_48000000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_48000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_48000000_FOREACH_NODELABEL(fn) fn(dma1)
#define DT_N_S_soc_S_dma_48000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_48000000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_48000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_48000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dma_48000000_HASH jR_yqej4_PaOi4JkBc5F_TXBvZoYL7kxj6gzmUxhqm4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_48000000_ORD 24
#define DT_N_S_soc_S_dma_48000000_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_48000000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_48000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v1 DT_N_S_soc_S_dma_48000000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_48000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_48000000_REG_NUM 1
#define DT_N_S_soc_S_dma_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_dma_48000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_48000000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_48000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_48000000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_7_VAL_irq 47
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_48000000_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_48000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_48000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_COMPAT_MODEL_IDX_0 "stm32-dma-v1"
#define DT_N_S_soc_S_dma_48000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_48000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_48000000_P_reg {1207959552 /* 0x48000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_dma_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_14 47
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_48000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_48000000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_dma_offset 0
#define DT_N_S_soc_S_dma_48000000_P_dma_offset_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_dma_requests 8
#define DT_N_S_soc_S_dma_48000000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_status "disabled"
#define DT_N_S_soc_S_dma_48000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_48000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_48000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_48000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_48000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dma_48000000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_48000000, status, 0)
#define DT_N_S_soc_S_dma_48000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_48000000, status, 0)
#define DT_N_S_soc_S_dma_48000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_48000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_48000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48000000_P_status_LEN 1
#define DT_N_S_soc_S_dma_48000000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_48000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dma-v1
#define DT_N_S_soc_S_dma_48000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v1
#define DT_N_S_soc_S_dma_48000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V1
#define DT_N_S_soc_S_dma_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_48000000, compatible, 0)
#define DT_N_S_soc_S_dma_48000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_48000000, compatible, 0)
#define DT_N_S_soc_S_dma_48000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_48000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_dma_48000000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_dma_48000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_48000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_48000000, clocks, 0)
#define DT_N_S_soc_S_dma_48000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_48000000, clocks, 0)
#define DT_N_S_soc_S_dma_48000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_48000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_48000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48000000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_48000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_48000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_48000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_48000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_48000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@48001000
 *
 * Node identifier: DT_N_S_soc_S_dma_48001000
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_48001000_PATH "/soc/dma@48001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_48001000_FULL_NAME "dma@48001000"
#define DT_N_S_soc_S_dma_48001000_FULL_NAME_UNQUOTED dma@48001000
#define DT_N_S_soc_S_dma_48001000_FULL_NAME_TOKEN dma_48001000
#define DT_N_S_soc_S_dma_48001000_FULL_NAME_UPPER_TOKEN DMA_48001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_48001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_48001000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_48001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_48001000_FOREACH_NODELABEL(fn) fn(dma2)
#define DT_N_S_soc_S_dma_48001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma2, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_48001000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_48001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_48001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dma_48001000_HASH zpPNtpj_y0y_uXVdT_iQGXp1POUD_si3sf0fxMUpVqQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_48001000_ORD 25
#define DT_N_S_soc_S_dma_48001000_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_48001000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_48001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_48001000_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v1 DT_N_S_soc_S_dma_48001000
#define DT_N_NODELABEL_dma2         DT_N_S_soc_S_dma_48001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_48001000_REG_NUM 1
#define DT_N_S_soc_S_dma_48001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_REG_IDX_0_VAL_ADDRESS 1207963648 /* 0x48001000 */
#define DT_N_S_soc_S_dma_48001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_48001000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_48001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_48001000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_5_VAL_irq 68
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_7_VAL_irq 70
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_48001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_48001000_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_48001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_48001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_COMPAT_MODEL_IDX_0 "stm32-dma-v1"
#define DT_N_S_soc_S_dma_48001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_48001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_48001000_P_reg {1207963648 /* 0x48001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_48001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_reg_IDX_0 1207963648
#define DT_N_S_soc_S_dma_48001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_48001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */, 70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_10 68
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_12 69
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_14 70
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_48001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_48001000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_dma_offset 8
#define DT_N_S_soc_S_dma_48001000_P_dma_offset_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_dma_requests 8
#define DT_N_S_soc_S_dma_48001000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_status "disabled"
#define DT_N_S_soc_S_dma_48001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_48001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_48001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_48001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_48001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dma_48001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_48001000, status, 0)
#define DT_N_S_soc_S_dma_48001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_48001000, status, 0)
#define DT_N_S_soc_S_dma_48001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_48001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_48001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48001000_P_status_LEN 1
#define DT_N_S_soc_S_dma_48001000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_48001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_48001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dma-v1
#define DT_N_S_soc_S_dma_48001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v1
#define DT_N_S_soc_S_dma_48001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V1
#define DT_N_S_soc_S_dma_48001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_48001000, compatible, 0)
#define DT_N_S_soc_S_dma_48001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_48001000, compatible, 0)
#define DT_N_S_soc_S_dma_48001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_48001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_48001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48001000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_48001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_dma_48001000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_dma_48001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_dma_48001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_48001000, clocks, 0)
#define DT_N_S_soc_S_dma_48001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_48001000, clocks, 0)
#define DT_N_S_soc_S_dma_48001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_48001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_48001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_48001000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_48001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_48001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_48001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_48001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_48001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dmamux@48002000
 *
 * Node identifier: DT_N_S_soc_S_dmamux_48002000
 *
 * Binding (compatible = st,stm32-dmamux):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dmamux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dmamux_48002000_PATH "/soc/dmamux@48002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dmamux_48002000_FULL_NAME "dmamux@48002000"
#define DT_N_S_soc_S_dmamux_48002000_FULL_NAME_UNQUOTED dmamux@48002000
#define DT_N_S_soc_S_dmamux_48002000_FULL_NAME_TOKEN dmamux_48002000
#define DT_N_S_soc_S_dmamux_48002000_FULL_NAME_UPPER_TOKEN DMAMUX_48002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dmamux_48002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dmamux_48002000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dmamux_48002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_NODELABEL(fn) fn(dmamux)
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dmamux, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dmamux_48002000_CHILD_NUM 0
#define DT_N_S_soc_S_dmamux_48002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dmamux_48002000_HASH 1u0jl0gh_hOa7cAqiCpVhSyU_JjvDpRzucSsYvwaj2w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dmamux_48002000_ORD 26
#define DT_N_S_soc_S_dmamux_48002000_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dmamux_48002000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dmamux_48002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dmamux_48002000_EXISTS 1
#define DT_N_INST_0_st_stm32_dmamux DT_N_S_soc_S_dmamux_48002000
#define DT_N_NODELABEL_dmamux       DT_N_S_soc_S_dmamux_48002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dmamux_48002000_REG_NUM 1
#define DT_N_S_soc_S_dmamux_48002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_REG_IDX_0_VAL_ADDRESS 1207967744 /* 0x48002000 */
#define DT_N_S_soc_S_dmamux_48002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dmamux_48002000_RANGES_NUM 0
#define DT_N_S_soc_S_dmamux_48002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dmamux_48002000_IRQ_NUM 1
#define DT_N_S_soc_S_dmamux_48002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_IRQ_IDX_0_VAL_irq 102
#define DT_N_S_soc_S_dmamux_48002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dmamux_48002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dmamux_48002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dmamux_48002000_COMPAT_MATCHES_st_stm32_dmamux 1
#define DT_N_S_soc_S_dmamux_48002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dmamux_48002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_COMPAT_MODEL_IDX_0 "stm32-dmamux"
#define DT_N_S_soc_S_dmamux_48002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dmamux_48002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dmamux_48002000_P_reg {1207967744 /* 0x48002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dmamux_48002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_reg_IDX_0 1207967744
#define DT_N_S_soc_S_dmamux_48002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dmamux_48002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_dma_channels 16
#define DT_N_S_soc_S_dmamux_48002000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_dma_generators 8
#define DT_N_S_soc_S_dmamux_48002000_P_dma_generators_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_dma_requests 108
#define DT_N_S_soc_S_dmamux_48002000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_status "disabled"
#define DT_N_S_soc_S_dmamux_48002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dmamux_48002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dmamux_48002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dmamux_48002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dmamux_48002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dmamux_48002000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_48002000, status, 0)
#define DT_N_S_soc_S_dmamux_48002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmamux_48002000, status, 0)
#define DT_N_S_soc_S_dmamux_48002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_48002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_48002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmamux_48002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_48002000_P_status_LEN 1
#define DT_N_S_soc_S_dmamux_48002000_P_status_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_compatible {"st,stm32-dmamux"}
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_IDX_0 "st,stm32-dmamux"
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dmamux
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_IDX_0_STRING_TOKEN st_stm32_dmamux
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMAMUX
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_48002000, compatible, 0)
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmamux_48002000, compatible, 0)
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_48002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmamux_48002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_LEN 1
#define DT_N_S_soc_S_dmamux_48002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_interrupts {102 /* 0x66 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dmamux_48002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_interrupts_IDX_0 102
#define DT_N_S_soc_S_dmamux_48002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dmamux_48002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_48002000, clocks, 0)
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmamux_48002000, clocks, 0)
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_48002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmamux_48002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_LEN 1
#define DT_N_S_soc_S_dmamux_48002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dmamux_48002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_wakeup_source 0
#define DT_N_S_soc_S_dmamux_48002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dmamux_48002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dmamux_48002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@5000d000
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_5000d000
 *
 * Binding (compatible = st,stm32g0-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32g0-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_PATH "/soc/interrupt-controller@5000d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_FULL_NAME "interrupt-controller@5000d000"
#define DT_N_S_soc_S_interrupt_controller_5000d000_FULL_NAME_UNQUOTED interrupt-controller@5000d000
#define DT_N_S_soc_S_interrupt_controller_5000d000_FULL_NAME_TOKEN interrupt_controller_5000d000
#define DT_N_S_soc_S_interrupt_controller_5000d000_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_5000D000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_NODELABEL(fn) fn(exti)
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(exti, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_5000d000_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_HASH b4sDoKFwMFPe7FJFsh8handbU8ZyViZBZsmhXJumqOk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_ORD 27
#define DT_N_S_soc_S_interrupt_controller_5000d000_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_EXISTS 1
#define DT_N_INST_0_st_stm32g0_exti DT_N_S_soc_S_interrupt_controller_5000d000
#define DT_N_INST_0_st_stm32_exti   DT_N_S_soc_S_interrupt_controller_5000d000
#define DT_N_NODELABEL_exti         DT_N_S_soc_S_interrupt_controller_5000d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_REG_IDX_0_VAL_ADDRESS 1342230528 /* 0x5000d000 */
#define DT_N_S_soc_S_interrupt_controller_5000d000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_5000d000_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NUM 16
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_VAL_irq 7
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_VAL_irq 8
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_VAL_irq 9
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_VAL_irq 10
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_VAL_irq 23
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_VAL_irq 64
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_VAL_irq 65
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_VAL_irq 66
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_VAL_irq 67
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_VAL_irq 40
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_VAL_irq 42
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_VAL_irq 76
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_VAL_irq 77
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_VAL_irq 121
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_VAL_irq 127
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_LEVEL 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line0_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line0_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line0_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line1_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line1_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line1_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line2_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line2_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line2_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line3_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line3_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line3_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line4_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line4_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line4_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line5_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line5_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line5_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_5_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line6_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line6_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line6_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_6_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line7_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line7_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line7_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_7_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line8_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line8_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line8_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_8_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line9_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line9_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line9_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_9_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line10_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line10_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line10_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_10_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line11_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line11_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line11_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_11_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line12_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line12_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line12_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_12_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line13_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line13_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line13_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_13_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line14_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line14_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line14_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_14_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line15_VAL_irq DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line15_VAL_priority DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_NAME_line15_CONTROLLER DT_N_S_soc_S_interrupt_controller_5000d000_IRQ_IDX_15_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_MATCHES_st_stm32g0_exti 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_MODEL_IDX_0 "stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_COMPAT_MODEL_IDX_1 "stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_5000d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_reg {1342230528 /* 0x5000d000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_reg_IDX_0 1342230528
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */, 7 /* 0x7 */, 0 /* 0x0 */, 8 /* 0x8 */, 0 /* 0x0 */, 9 /* 0x9 */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */, 23 /* 0x17 */, 0 /* 0x0 */, 64 /* 0x40 */, 0 /* 0x0 */, 65 /* 0x41 */, 0 /* 0x0 */, 66 /* 0x42 */, 0 /* 0x0 */, 67 /* 0x43 */, 0 /* 0x0 */, 40 /* 0x28 */, 0 /* 0x0 */, 42 /* 0x2a */, 0 /* 0x0 */, 76 /* 0x4c */, 0 /* 0x0 */, 77 /* 0x4d */, 0 /* 0x0 */, 121 /* 0x79 */, 0 /* 0x0 */, 127 /* 0x7f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_2 7
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_4 8
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_6 9
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_8 10
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_10 23
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_12 64
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_14 65
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_16 66
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_17 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_18 67
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_20 40
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_21_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_21 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_22_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_22 42
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_23_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_23 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_24_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_24 76
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_25_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_25 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_26_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_26 77
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_27_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_27 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_28_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_28 121
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_29_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_29 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_30_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_30 127
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_31_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_IDX_31 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names {"line0", "line1", "line2", "line3", "line4", "line5", "line6", "line7", "line8", "line9", "line10", "line11", "line12", "line13", "line14", "line15"}
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_0 "line0"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_0_STRING_UNQUOTED line0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_0_STRING_TOKEN line0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_1 "line1"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_1_STRING_UNQUOTED line1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_1_STRING_TOKEN line1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_2 "line2"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_2_STRING_UNQUOTED line2
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_2_STRING_TOKEN line2
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN LINE2
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_3 "line3"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_3_STRING_UNQUOTED line3
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_3_STRING_TOKEN line3
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN LINE3
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_4 "line4"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_4_STRING_UNQUOTED line4
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_4_STRING_TOKEN line4
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN LINE4
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_5 "line5"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_5_STRING_UNQUOTED line5
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_5_STRING_TOKEN line5
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN LINE5
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_6 "line6"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_6_STRING_UNQUOTED line6
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_6_STRING_TOKEN line6
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_6_STRING_UPPER_TOKEN LINE6
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_7 "line7"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_7_STRING_UNQUOTED line7
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_7_STRING_TOKEN line7
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_7_STRING_UPPER_TOKEN LINE7
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_8 "line8"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_8_STRING_UNQUOTED line8
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_8_STRING_TOKEN line8
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_8_STRING_UPPER_TOKEN LINE8
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_9 "line9"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_9_STRING_UNQUOTED line9
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_9_STRING_TOKEN line9
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_9_STRING_UPPER_TOKEN LINE9
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_10 "line10"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_10_STRING_UNQUOTED line10
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_10_STRING_TOKEN line10
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_10_STRING_UPPER_TOKEN LINE10
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_11 "line11"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_11_STRING_UNQUOTED line11
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_11_STRING_TOKEN line11
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_11_STRING_UPPER_TOKEN LINE11
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_12 "line12"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_12_STRING_UNQUOTED line12
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_12_STRING_TOKEN line12
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_12_STRING_UPPER_TOKEN LINE12
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_13 "line13"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_13_STRING_UNQUOTED line13
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_13_STRING_TOKEN line13
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_13_STRING_UPPER_TOKEN LINE13
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_14 "line14"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_14_STRING_UNQUOTED line14
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_14_STRING_TOKEN line14
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_14_STRING_UPPER_TOKEN LINE14
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_15 "line15"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_15_STRING_UNQUOTED line15
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_15_STRING_TOKEN line15
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_IDX_15_STRING_UPPER_TOKEN LINE15
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 13) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 14) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 15)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 15)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 15, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, interrupt_names, 15, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_LEN 16
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_num_lines 96
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_num_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_num_gpio_lines 16
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_num_gpio_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges {0 /* 0x0 */, 1 /* 0x1 */, 1 /* 0x1 */, 1 /* 0x1 */, 2 /* 0x2 */, 1 /* 0x1 */, 3 /* 0x3 */, 1 /* 0x1 */, 4 /* 0x4 */, 1 /* 0x1 */, 5 /* 0x5 */, 1 /* 0x1 */, 6 /* 0x6 */, 1 /* 0x1 */, 7 /* 0x7 */, 1 /* 0x1 */, 8 /* 0x8 */, 1 /* 0x1 */, 9 /* 0x9 */, 1 /* 0x1 */, 10 /* 0xa */, 1 /* 0x1 */, 11 /* 0xb */, 1 /* 0x1 */, 12 /* 0xc */, 1 /* 0x1 */, 13 /* 0xd */, 1 /* 0x1 */, 14 /* 0xe */, 1 /* 0x1 */, 15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_1 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_2 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_3 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_4 2
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_5 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_6 3
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_7 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_8 4
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_9 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_10 5
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_11 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_12 6
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_13 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_14 7
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_15 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_16_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_16 8
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_17_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_17 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_18_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_18 9
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_19_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_19 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_20_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_20 10
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_21_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_21 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_22_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_22 11
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_23_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_23 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_24_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_24 12
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_25_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_25 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_26_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_26 13
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_27_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_27 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_28_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_28 14
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_29_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_29 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_30_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_30 15
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_31_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_IDX_31 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 13) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 14) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 15) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 16) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 17) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 18) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 19) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 20) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 21) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 22) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 23) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 24) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 25) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 26) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 27) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 28) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 29) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 30) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 31)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 31)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 31, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, line_ranges, 31, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_LEN 32
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_line_ranges_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible {"st,stm32g0-exti", "st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_0 "st,stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32g0-exti
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_0_STRING_TOKEN st_stm32g0_exti
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32G0_EXTI
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_1 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-exti
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_1_STRING_TOKEN st_stm32_exti
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_EXTI
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_5000d000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_LEN 2
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_IDX_0_VAL_bus 10
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_5000d000, clocks, 0)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_5000d000, clocks, 0)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_LEN 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_5000d000_P_interrupt_controller_EXISTS 1

/*
 * Devicetree node: /soc/mailbox@4c001000
 *
 * Node identifier: DT_N_S_soc_S_mailbox_4c001000
 *
 * Binding (compatible = st,stm32-ipcc-mailbox):
 *   $ZEPHYR_BASE/dts/bindings/ipm/st,stm32-ipcc-mailbox.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mailbox_4c001000_PATH "/soc/mailbox@4c001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mailbox_4c001000_FULL_NAME "mailbox@4c001000"
#define DT_N_S_soc_S_mailbox_4c001000_FULL_NAME_UNQUOTED mailbox@4c001000
#define DT_N_S_soc_S_mailbox_4c001000_FULL_NAME_TOKEN mailbox_4c001000
#define DT_N_S_soc_S_mailbox_4c001000_FULL_NAME_UPPER_TOKEN MAILBOX_4C001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mailbox_4c001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mailbox_4c001000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mailbox_4c001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_NODELABEL(fn) fn(mailbox)
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mailbox, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mailbox_4c001000_CHILD_NUM 0
#define DT_N_S_soc_S_mailbox_4c001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mailbox_4c001000_HASH P9qJQRGu2vAlJhpYr3F1jSGDDzx4KxrxPiCZVeOIVeA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mailbox_4c001000_ORD 28
#define DT_N_S_soc_S_mailbox_4c001000_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mailbox_4c001000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mailbox_4c001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mailbox_4c001000_EXISTS 1
#define DT_N_INST_0_st_stm32_ipcc_mailbox DT_N_S_soc_S_mailbox_4c001000
#define DT_N_NODELABEL_mailbox            DT_N_S_soc_S_mailbox_4c001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mailbox_4c001000_REG_NUM 1
#define DT_N_S_soc_S_mailbox_4c001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_REG_IDX_0_VAL_ADDRESS 1275072512 /* 0x4c001000 */
#define DT_N_S_soc_S_mailbox_4c001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_mailbox_4c001000_RANGES_NUM 0
#define DT_N_S_soc_S_mailbox_4c001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NUM 2
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_VAL_irq 103
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_VAL_irq 104
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_rxo_VAL_irq DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_rxo_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_rxo_VAL_priority DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_rxo_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_rxo_CONTROLLER DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_txf_VAL_irq DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_txf_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_txf_VAL_priority DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_txf_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_IRQ_NAME_txf_CONTROLLER DT_N_S_soc_S_mailbox_4c001000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_mailbox_4c001000_COMPAT_MATCHES_st_stm32_ipcc_mailbox 1
#define DT_N_S_soc_S_mailbox_4c001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_mailbox_4c001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_COMPAT_MODEL_IDX_0 "stm32-ipcc-mailbox"
#define DT_N_S_soc_S_mailbox_4c001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mailbox_4c001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_IDX_0_VAL_bus 6
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mailbox_4c001000, clocks, 0)
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mailbox_4c001000, clocks, 0)
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mailbox_4c001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mailbox_4c001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_LEN 1
#define DT_N_S_soc_S_mailbox_4c001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_status "okay"
#define DT_N_S_soc_S_mailbox_4c001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_mailbox_4c001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_mailbox_4c001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mailbox_4c001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_mailbox_4c001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_mailbox_4c001000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mailbox_4c001000, status, 0)
#define DT_N_S_soc_S_mailbox_4c001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mailbox_4c001000, status, 0)
#define DT_N_S_soc_S_mailbox_4c001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mailbox_4c001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mailbox_4c001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_status_LEN 1
#define DT_N_S_soc_S_mailbox_4c001000_P_status_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible {"st,stm32-ipcc-mailbox"}
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_IDX_0 "st,stm32-ipcc-mailbox"
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-ipcc-mailbox
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_ipcc_mailbox
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_IPCC_MAILBOX
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mailbox_4c001000, compatible, 0)
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mailbox_4c001000, compatible, 0)
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mailbox_4c001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mailbox_4c001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_LEN 1
#define DT_N_S_soc_S_mailbox_4c001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_reg {1275072512 /* 0x4c001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_mailbox_4c001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_reg_IDX_0 1275072512
#define DT_N_S_soc_S_mailbox_4c001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_mailbox_4c001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts {103 /* 0x67 */, 0 /* 0x0 */, 104 /* 0x68 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_0 103
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_2 104
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names {"rxo", "txf"}
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_0 "rxo"
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_0_STRING_UNQUOTED rxo
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_0_STRING_TOKEN rxo
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RXO
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_1 "txf"
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_1_STRING_UNQUOTED txf
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_1_STRING_TOKEN txf
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TXF
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 1)
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 1)
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mailbox_4c001000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_mailbox_4c001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mailbox_4c001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_wakeup_source 0
#define DT_N_S_soc_S_mailbox_4c001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mailbox_4c001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mailbox_4c001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/serial@4000e000
 *
 * Node identifier: DT_N_S_soc_S_serial_4000e000
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_4000e000_PATH "/soc/serial@4000e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_4000e000_FULL_NAME "serial@4000e000"
#define DT_N_S_soc_S_serial_4000e000_FULL_NAME_UNQUOTED serial@4000e000
#define DT_N_S_soc_S_serial_4000e000_FULL_NAME_TOKEN serial_4000e000
#define DT_N_S_soc_S_serial_4000e000_FULL_NAME_UPPER_TOKEN SERIAL_4000E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_4000e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_4000e000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_4000e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_4000e000_FOREACH_NODELABEL(fn) fn(usart2)
#define DT_N_S_soc_S_serial_4000e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_4000e000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_4000e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_4000e000_HASH FdTxwvR7_4YjnyTJ9xuO7tKVSf_qAzjRxm8everyWpc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_4000e000_ORD 29
#define DT_N_S_soc_S_serial_4000e000_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_4000e000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_4000e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_4000e000_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_4000e000
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_4000e000
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_4000e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_4000e000_REG_NUM 1
#define DT_N_S_soc_S_serial_4000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_REG_IDX_0_VAL_ADDRESS 1073799168 /* 0x4000e000 */
#define DT_N_S_soc_S_serial_4000e000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_4000e000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_4000e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_4000e000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_4000e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_4000e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_4000e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_4000e000_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_4000e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_4000e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_4000e000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_4000e000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_4000e000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_4000e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_4000e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_4000e000_P_reg {1073799168 /* 0x4000e000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_4000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_reg_IDX_0 1073799168
#define DT_N_S_soc_S_serial_4000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_4000e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_serial_4000e000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_4000e000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_4000e000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000e000, clocks, 0)
#define DT_N_S_soc_S_serial_4000e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000e000, clocks, 0)
#define DT_N_S_soc_S_serial_4000e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_4000e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_serial_4000e000_P_resets_IDX_0_VAL_id 319369230
#define DT_N_S_soc_S_serial_4000e000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000e000, resets, 0)
#define DT_N_S_soc_S_serial_4000e000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000e000, resets, 0)
#define DT_N_S_soc_S_serial_4000e000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000e000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000e000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_4000e000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_4000e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_4000e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_4000e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_current_speed 115200
#define DT_N_S_soc_S_serial_4000e000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000e000, stop_bits, 0)
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000e000, stop_bits, 0)
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000e000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000e000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_4000e000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_data_bits 8
#define DT_N_S_soc_S_serial_4000e000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_4000e000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_single_wire 0
#define DT_N_S_soc_S_serial_4000e000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_4000e000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_de_enable 0
#define DT_N_S_soc_S_serial_4000e000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_4000e000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_4000e000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_de_invert 0
#define DT_N_S_soc_S_serial_4000e000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_4000e000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_4000e000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_parity "none"
#define DT_N_S_soc_S_serial_4000e000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_4000e000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_4000e000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_4000e000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_4000e000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_4000e000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000e000, parity, 0)
#define DT_N_S_soc_S_serial_4000e000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000e000, parity, 0)
#define DT_N_S_soc_S_serial_4000e000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000e000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000e000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_4000e000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_status "disabled"
#define DT_N_S_soc_S_serial_4000e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_4000e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_4000e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_4000e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_4000e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_4000e000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000e000, status, 0)
#define DT_N_S_soc_S_serial_4000e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000e000, status, 0)
#define DT_N_S_soc_S_serial_4000e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_status_LEN 1
#define DT_N_S_soc_S_serial_4000e000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_4000e000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_4000e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000e000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_4000e000, compatible, 1)
#define DT_N_S_soc_S_serial_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000e000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_4000e000, compatible, 1)
#define DT_N_S_soc_S_serial_4000e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000e000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_4000e000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000e000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_4000e000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000e000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_4000e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_4000e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_4000e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_4000e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_tx_invert 0
#define DT_N_S_soc_S_serial_4000e000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_4000e000_P_rx_invert 0
#define DT_N_S_soc_S_serial_4000e000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/usart3_rx_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_PATH "/soc/pin-controller@50002000/usart3_rx_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FULL_NAME "usart3_rx_pb12"
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FULL_NAME_UNQUOTED usart3_rx_pb12
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FULL_NAME_TOKEN usart3_rx_pb12
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FULL_NAME_UPPER_TOKEN USART3_RX_PB12

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_NODELABEL(fn) fn(usart3_rx_pb12)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart3_rx_pb12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_HASH CDMoo4ggdHcFyVdT_RTphfbXkukOrgAhsoMwB8Aixuk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_ORD 30
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_SUPPORTS_ORDS \
	32, /* /soc/serial@4000f000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_EXISTS 1
#define DT_N_NODELABEL_usart3_rx_pb12 DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_pinmux 904
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/usart3_tx_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_PATH "/soc/pin-controller@50002000/usart3_tx_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FULL_NAME "usart3_tx_pb10"
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FULL_NAME_UNQUOTED usart3_tx_pb10
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FULL_NAME_TOKEN usart3_tx_pb10
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FULL_NAME_UPPER_TOKEN USART3_TX_PB10

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_NODELABEL(fn) fn(usart3_tx_pb10)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart3_tx_pb10, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_HASH TumItiD_tmlsfk_EetylJgM34WSyrAhqfPbGqI3dsd8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_ORD 31
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_SUPPORTS_ORDS \
	32, /* /soc/serial@4000f000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_EXISTS 1
#define DT_N_NODELABEL_usart3_tx_pb10 DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_pinmux 839
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@4000f000
 *
 * Node identifier: DT_N_S_soc_S_serial_4000f000
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_4000f000_PATH "/soc/serial@4000f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_4000f000_FULL_NAME "serial@4000f000"
#define DT_N_S_soc_S_serial_4000f000_FULL_NAME_UNQUOTED serial@4000f000
#define DT_N_S_soc_S_serial_4000f000_FULL_NAME_TOKEN serial_4000f000
#define DT_N_S_soc_S_serial_4000f000_FULL_NAME_UPPER_TOKEN SERIAL_4000F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_4000f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_4000f000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_4000f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_4000f000_FOREACH_NODELABEL(fn) fn(usart3)
#define DT_N_S_soc_S_serial_4000f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_4000f000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_4000f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_4000f000_HASH sx_zg6R26YWXmhy7FQxjQnWYu9imtWxAZiu1mmkWdAk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_4000f000_ORD 32
#define DT_N_S_soc_S_serial_4000f000_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_4000f000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */ \
	30, /* /soc/pin-controller@50002000/usart3_rx_pb12 */ \
	31, /* /soc/pin-controller@50002000/usart3_tx_pb10 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_4000f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_4000f000_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_4000f000
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_4000f000
#define DT_N_NODELABEL_usart3      DT_N_S_soc_S_serial_4000f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_4000f000_REG_NUM 1
#define DT_N_S_soc_S_serial_4000f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_REG_IDX_0_VAL_ADDRESS 1073803264 /* 0x4000f000 */
#define DT_N_S_soc_S_serial_4000f000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_4000f000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_4000f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_4000f000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_serial_4000f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_4000f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_4000f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_4000f000_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_4000f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_4000f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_4000f000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_4000f000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_4000f000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_4000f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10
#define DT_N_S_soc_S_serial_4000f000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12

/* Generic property macros: */
#define DT_N_S_soc_S_serial_4000f000_P_reg {1073803264 /* 0x4000f000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_4000f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_reg_IDX_0 1073803264
#define DT_N_S_soc_S_serial_4000f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_4000f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_serial_4000f000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_4000f000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_serial_4000f000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, clocks, 0)
#define DT_N_S_soc_S_serial_4000f000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, clocks, 0)
#define DT_N_S_soc_S_serial_4000f000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_4000f000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_serial_4000f000_P_resets_IDX_0_VAL_id 319369231
#define DT_N_S_soc_S_serial_4000f000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, resets, 0)
#define DT_N_S_soc_S_serial_4000f000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, resets, 0)
#define DT_N_S_soc_S_serial_4000f000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_4000f000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_4000f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_serial_4000f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_4000f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_current_speed 115200
#define DT_N_S_soc_S_serial_4000f000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, stop_bits, 0)
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, stop_bits, 0)
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_4000f000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_data_bits 8
#define DT_N_S_soc_S_serial_4000f000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_4000f000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_single_wire 0
#define DT_N_S_soc_S_serial_4000f000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_4000f000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_4000f000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_4000f000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_de_enable 0
#define DT_N_S_soc_S_serial_4000f000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_4000f000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_4000f000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_de_invert 0
#define DT_N_S_soc_S_serial_4000f000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_4000f000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_4000f000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_parity "none"
#define DT_N_S_soc_S_serial_4000f000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_4000f000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_4000f000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_4000f000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_4000f000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_4000f000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, parity, 0)
#define DT_N_S_soc_S_serial_4000f000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, parity, 0)
#define DT_N_S_soc_S_serial_4000f000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_4000f000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_status "okay"
#define DT_N_S_soc_S_serial_4000f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_4000f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_4000f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_4000f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_4000f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_4000f000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, status, 0)
#define DT_N_S_soc_S_serial_4000f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, status, 0)
#define DT_N_S_soc_S_serial_4000f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_status_LEN 1
#define DT_N_S_soc_S_serial_4000f000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_4000f000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_4000f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000f000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_4000f000, compatible, 1)
#define DT_N_S_soc_S_serial_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_4000f000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_4000f000, compatible, 1)
#define DT_N_S_soc_S_serial_4000f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_4000f000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_4000f000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_4000f000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_4000f000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_4000f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_4000f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_4000f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_4000f000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_tx_invert 0
#define DT_N_S_soc_S_serial_4000f000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_4000f000_P_rx_invert 0
#define DT_N_S_soc_S_serial_4000f000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40010000
 *
 * Node identifier: DT_N_S_soc_S_serial_40010000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40010000_PATH "/soc/serial@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40010000_FULL_NAME "serial@40010000"
#define DT_N_S_soc_S_serial_40010000_FULL_NAME_UNQUOTED serial@40010000
#define DT_N_S_soc_S_serial_40010000_FULL_NAME_TOKEN serial_40010000
#define DT_N_S_soc_S_serial_40010000_FULL_NAME_UPPER_TOKEN SERIAL_40010000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40010000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40010000_FOREACH_NODELABEL(fn) fn(uart4)
#define DT_N_S_soc_S_serial_40010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart4, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40010000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40010000_HASH 9FLbrjhRsyXyR0tDcQS2_2Ta3zOCAX_5f6N7NCkObr8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40010000_ORD 33
#define DT_N_S_soc_S_serial_40010000_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40010000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40010000_EXISTS 1
#define DT_N_INST_3_st_stm32_uart DT_N_S_soc_S_serial_40010000
#define DT_N_NODELABEL_uart4      DT_N_S_soc_S_serial_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40010000_REG_NUM 1
#define DT_N_S_soc_S_serial_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_serial_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40010000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_serial_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40010000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40010000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40010000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_serial_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_serial_40010000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40010000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_serial_40010000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40010000, clocks, 0)
#define DT_N_S_soc_S_serial_40010000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40010000, clocks, 0)
#define DT_N_S_soc_S_serial_40010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_serial_40010000_P_resets_IDX_0_VAL_id 319369232
#define DT_N_S_soc_S_serial_40010000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40010000, resets, 0)
#define DT_N_S_soc_S_serial_40010000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40010000, resets, 0)
#define DT_N_S_soc_S_serial_40010000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40010000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40010000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40010000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_serial_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40010000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40010000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40010000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40010000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40010000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40010000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_data_bits 8
#define DT_N_S_soc_S_serial_40010000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40010000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_single_wire 0
#define DT_N_S_soc_S_serial_40010000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40010000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_de_enable 0
#define DT_N_S_soc_S_serial_40010000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40010000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40010000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_de_invert 0
#define DT_N_S_soc_S_serial_40010000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40010000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40010000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_parity "none"
#define DT_N_S_soc_S_serial_40010000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40010000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40010000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40010000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40010000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40010000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40010000, parity, 0)
#define DT_N_S_soc_S_serial_40010000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40010000, parity, 0)
#define DT_N_S_soc_S_serial_40010000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40010000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40010000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40010000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_status "disabled"
#define DT_N_S_soc_S_serial_40010000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40010000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40010000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40010000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40010000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40010000, status, 0)
#define DT_N_S_soc_S_serial_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40010000, status, 0)
#define DT_N_S_soc_S_serial_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40010000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40010000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40010000, compatible, 0)
#define DT_N_S_soc_S_serial_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40010000, compatible, 0)
#define DT_N_S_soc_S_serial_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40010000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40010000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40010000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011000
 *
 * Node identifier: DT_N_S_soc_S_serial_40011000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011000_PATH "/soc/serial@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011000_FULL_NAME "serial@40011000"
#define DT_N_S_soc_S_serial_40011000_FULL_NAME_UNQUOTED serial@40011000
#define DT_N_S_soc_S_serial_40011000_FULL_NAME_TOKEN serial_40011000
#define DT_N_S_soc_S_serial_40011000_FULL_NAME_UPPER_TOKEN SERIAL_40011000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40011000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40011000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40011000_FOREACH_NODELABEL(fn) fn(uart5)
#define DT_N_S_soc_S_serial_40011000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40011000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40011000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40011000_HASH zC6jA0Z9upGUbivXx_7kb5XvPKXVEdHortQpRPhSzt8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011000_ORD 34
#define DT_N_S_soc_S_serial_40011000_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011000_EXISTS 1
#define DT_N_INST_4_st_stm32_uart DT_N_S_soc_S_serial_40011000
#define DT_N_NODELABEL_uart5      DT_N_S_soc_S_serial_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40011000_REG_NUM 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40011000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40011000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011000_P_reg {1073811456 /* 0x40011000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, clocks, 0)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, clocks, 0)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_VAL_id 319369233
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, resets, 0)
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, resets, 0)
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40011000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_data_bits 8
#define DT_N_S_soc_S_serial_40011000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40011000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_single_wire 0
#define DT_N_S_soc_S_serial_40011000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40011000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_enable 0
#define DT_N_S_soc_S_serial_40011000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40011000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40011000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_invert 0
#define DT_N_S_soc_S_serial_40011000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40011000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_parity "none"
#define DT_N_S_soc_S_serial_40011000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40011000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40011000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40011000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40011000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40011000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, parity, 0)
#define DT_N_S_soc_S_serial_40011000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, parity, 0)
#define DT_N_S_soc_S_serial_40011000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status "disabled"
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40011000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, status, 0)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, status, 0)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, compatible, 0)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, compatible, 0)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40011000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40011000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40011000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40011000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/uart7_rx_pe7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_PATH "/soc/pin-controller@50002000/uart7_rx_pe7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FULL_NAME "uart7_rx_pe7"
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FULL_NAME_UNQUOTED uart7_rx_pe7
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FULL_NAME_TOKEN uart7_rx_pe7
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FULL_NAME_UPPER_TOKEN UART7_RX_PE7

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_NODELABEL(fn) fn(uart7_rx_pe7)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart7_rx_pe7, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_HASH 2rAmkjFWtX6exkXH75ebrmRkvAneVaxTLvLdWa97PiU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_ORD 35
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_SUPPORTS_ORDS \
	37, /* /soc/serial@40018000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_EXISTS 1
#define DT_N_NODELABEL_uart7_rx_pe7 DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_pinmux 2279
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/uart7_tx_pe8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_PATH "/soc/pin-controller@50002000/uart7_tx_pe8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FULL_NAME "uart7_tx_pe8"
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FULL_NAME_UNQUOTED uart7_tx_pe8
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FULL_NAME_TOKEN uart7_tx_pe8
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FULL_NAME_UPPER_TOKEN UART7_TX_PE8

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_NODELABEL(fn) fn(uart7_tx_pe8)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart7_tx_pe8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_HASH YLd0Kzl1v9LsAx9TUwVMM6ET1MrYh9clbgbzAbxxr54

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_ORD 36
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_SUPPORTS_ORDS \
	37, /* /soc/serial@40018000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_EXISTS 1
#define DT_N_NODELABEL_uart7_tx_pe8 DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_pinmux 2311
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40018000
 *
 * Node identifier: DT_N_S_soc_S_serial_40018000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40018000_PATH "/soc/serial@40018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40018000_FULL_NAME "serial@40018000"
#define DT_N_S_soc_S_serial_40018000_FULL_NAME_UNQUOTED serial@40018000
#define DT_N_S_soc_S_serial_40018000_FULL_NAME_TOKEN serial_40018000
#define DT_N_S_soc_S_serial_40018000_FULL_NAME_UPPER_TOKEN SERIAL_40018000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40018000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40018000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40018000_NODELABEL_NUM 2
#define DT_N_S_soc_S_serial_40018000_FOREACH_NODELABEL(fn) fn(uart7) fn(arduino_serial)
#define DT_N_S_soc_S_serial_40018000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart7, __VA_ARGS__) fn(arduino_serial, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40018000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40018000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40018000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40018000_HASH q6VKS1UXyyJfhUqGnTvippDs_DapjJ7plnLKNzftoI8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40018000_ORD 37
#define DT_N_S_soc_S_serial_40018000_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40018000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */ \
	35, /* /soc/pin-controller@50002000/uart7_rx_pe7 */ \
	36, /* /soc/pin-controller@50002000/uart7_tx_pe8 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40018000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40018000_EXISTS 1
#define DT_N_INST_1_st_stm32_uart     DT_N_S_soc_S_serial_40018000
#define DT_N_NODELABEL_uart7          DT_N_S_soc_S_serial_40018000
#define DT_N_NODELABEL_arduino_serial DT_N_S_soc_S_serial_40018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40018000_REG_NUM 1
#define DT_N_S_soc_S_serial_40018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_REG_IDX_0_VAL_ADDRESS 1073840128 /* 0x40018000 */
#define DT_N_S_soc_S_serial_40018000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40018000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40018000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_IRQ_IDX_0_VAL_irq 82
#define DT_N_S_soc_S_serial_40018000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40018000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40018000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40018000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40018000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40018000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40018000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40018000_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40018000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40018000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40018000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40018000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8
#define DT_N_S_soc_S_serial_40018000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40018000_P_reg {1073840128 /* 0x40018000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_reg_IDX_0 1073840128
#define DT_N_S_soc_S_serial_40018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_serial_40018000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40018000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40018000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, clocks, 0)
#define DT_N_S_soc_S_serial_40018000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, clocks, 0)
#define DT_N_S_soc_S_serial_40018000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40018000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_serial_40018000_P_resets_IDX_0_VAL_id 319369234
#define DT_N_S_soc_S_serial_40018000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, resets, 0)
#define DT_N_S_soc_S_serial_40018000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, resets, 0)
#define DT_N_S_soc_S_serial_40018000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40018000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_interrupts {82 /* 0x52 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40018000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_interrupts_IDX_0 82
#define DT_N_S_soc_S_serial_40018000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40018000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40018000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40018000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_data_bits 8
#define DT_N_S_soc_S_serial_40018000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40018000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_single_wire 0
#define DT_N_S_soc_S_serial_40018000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40018000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40018000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40018000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_de_enable 0
#define DT_N_S_soc_S_serial_40018000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40018000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40018000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_de_invert 0
#define DT_N_S_soc_S_serial_40018000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40018000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40018000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_parity "none"
#define DT_N_S_soc_S_serial_40018000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40018000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40018000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40018000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40018000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40018000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, parity, 0)
#define DT_N_S_soc_S_serial_40018000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, parity, 0)
#define DT_N_S_soc_S_serial_40018000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40018000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_status "okay"
#define DT_N_S_soc_S_serial_40018000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40018000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40018000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40018000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40018000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40018000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, status, 0)
#define DT_N_S_soc_S_serial_40018000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, status, 0)
#define DT_N_S_soc_S_serial_40018000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40018000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40018000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40018000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40018000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40018000, compatible, 0)
#define DT_N_S_soc_S_serial_40018000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40018000, compatible, 0)
#define DT_N_S_soc_S_serial_40018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40018000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40018000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40018000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40018000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40018000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40018000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40018000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40019000
 *
 * Node identifier: DT_N_S_soc_S_serial_40019000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40019000_PATH "/soc/serial@40019000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40019000_FULL_NAME "serial@40019000"
#define DT_N_S_soc_S_serial_40019000_FULL_NAME_UNQUOTED serial@40019000
#define DT_N_S_soc_S_serial_40019000_FULL_NAME_TOKEN serial_40019000
#define DT_N_S_soc_S_serial_40019000_FULL_NAME_UPPER_TOKEN SERIAL_40019000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40019000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40019000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40019000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40019000_FOREACH_NODELABEL(fn) fn(uart8)
#define DT_N_S_soc_S_serial_40019000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart8, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40019000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40019000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40019000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_40019000_HASH JEnPTuaBpM6lEolJs4NYmi_L8cS1ebXm6v45rEyxSWU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40019000_ORD 38
#define DT_N_S_soc_S_serial_40019000_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40019000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40019000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40019000_EXISTS 1
#define DT_N_INST_6_st_stm32_uart DT_N_S_soc_S_serial_40019000
#define DT_N_NODELABEL_uart8      DT_N_S_soc_S_serial_40019000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40019000_REG_NUM 1
#define DT_N_S_soc_S_serial_40019000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_REG_IDX_0_VAL_ADDRESS 1073844224 /* 0x40019000 */
#define DT_N_S_soc_S_serial_40019000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40019000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40019000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40019000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_IRQ_IDX_0_VAL_irq 83
#define DT_N_S_soc_S_serial_40019000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40019000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40019000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40019000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40019000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40019000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40019000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40019000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40019000_P_reg {1073844224 /* 0x40019000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40019000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_reg_IDX_0 1073844224
#define DT_N_S_soc_S_serial_40019000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40019000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_serial_40019000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40019000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_serial_40019000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40019000, clocks, 0)
#define DT_N_S_soc_S_serial_40019000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40019000, clocks, 0)
#define DT_N_S_soc_S_serial_40019000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40019000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40019000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40019000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_serial_40019000_P_resets_IDX_0_VAL_id 319369235
#define DT_N_S_soc_S_serial_40019000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40019000, resets, 0)
#define DT_N_S_soc_S_serial_40019000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40019000, resets, 0)
#define DT_N_S_soc_S_serial_40019000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40019000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40019000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40019000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_interrupts {83 /* 0x53 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40019000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_interrupts_IDX_0 83
#define DT_N_S_soc_S_serial_40019000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40019000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40019000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40019000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40019000, stop_bits, 0)
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40019000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40019000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_40019000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_data_bits 8
#define DT_N_S_soc_S_serial_40019000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40019000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_single_wire 0
#define DT_N_S_soc_S_serial_40019000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40019000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_de_enable 0
#define DT_N_S_soc_S_serial_40019000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40019000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40019000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_de_invert 0
#define DT_N_S_soc_S_serial_40019000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40019000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40019000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_parity "none"
#define DT_N_S_soc_S_serial_40019000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40019000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40019000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40019000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40019000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40019000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40019000, parity, 0)
#define DT_N_S_soc_S_serial_40019000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40019000, parity, 0)
#define DT_N_S_soc_S_serial_40019000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40019000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40019000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40019000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_status "disabled"
#define DT_N_S_soc_S_serial_40019000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40019000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40019000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40019000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40019000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40019000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40019000, status, 0)
#define DT_N_S_soc_S_serial_40019000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40019000, status, 0)
#define DT_N_S_soc_S_serial_40019000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40019000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40019000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40019000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40019000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40019000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40019000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40019000, compatible, 0)
#define DT_N_S_soc_S_serial_40019000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40019000, compatible, 0)
#define DT_N_S_soc_S_serial_40019000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40019000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40019000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40019000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40019000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40019000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40019000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40019000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40019000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40019000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40019000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@44003000
 *
 * Node identifier: DT_N_S_soc_S_serial_44003000
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_44003000_PATH "/soc/serial@44003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_44003000_FULL_NAME "serial@44003000"
#define DT_N_S_soc_S_serial_44003000_FULL_NAME_UNQUOTED serial@44003000
#define DT_N_S_soc_S_serial_44003000_FULL_NAME_TOKEN serial_44003000
#define DT_N_S_soc_S_serial_44003000_FULL_NAME_UPPER_TOKEN SERIAL_44003000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_44003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_44003000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_44003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_44003000_FOREACH_NODELABEL(fn) fn(usart6)
#define DT_N_S_soc_S_serial_44003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart6, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_44003000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_44003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_44003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_serial_44003000_HASH yTJr3y2kbuDqZLHfS3g3ApIPDzwYBJcothdAty0aJqc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_44003000_ORD 39
#define DT_N_S_soc_S_serial_44003000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_44003000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_44003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_44003000_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_44003000
#define DT_N_INST_5_st_stm32_uart  DT_N_S_soc_S_serial_44003000
#define DT_N_NODELABEL_usart6      DT_N_S_soc_S_serial_44003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_44003000_REG_NUM 1
#define DT_N_S_soc_S_serial_44003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_REG_IDX_0_VAL_ADDRESS 1140862976 /* 0x44003000 */
#define DT_N_S_soc_S_serial_44003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_44003000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_44003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_44003000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_44003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_serial_44003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_44003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_44003000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_44003000_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_44003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_44003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_44003000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_44003000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_44003000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_44003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_44003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_44003000_P_reg {1140862976 /* 0x44003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_44003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_reg_IDX_0 1140862976
#define DT_N_S_soc_S_serial_44003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_44003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_serial_44003000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_serial_44003000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_serial_44003000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44003000, clocks, 0)
#define DT_N_S_soc_S_serial_44003000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44003000, clocks, 0)
#define DT_N_S_soc_S_serial_44003000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_44003000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_serial_44003000_P_resets_IDX_0_VAL_id 320418061
#define DT_N_S_soc_S_serial_44003000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44003000, resets, 0)
#define DT_N_S_soc_S_serial_44003000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44003000, resets, 0)
#define DT_N_S_soc_S_serial_44003000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44003000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44003000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_44003000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_44003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_serial_44003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_44003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_current_speed 115200
#define DT_N_S_soc_S_serial_44003000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits "1"
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44003000, stop_bits, 0)
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44003000, stop_bits, 0)
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44003000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44003000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_serial_44003000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_data_bits 8
#define DT_N_S_soc_S_serial_44003000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_serial_44003000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_single_wire 0
#define DT_N_S_soc_S_serial_44003000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_44003000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_de_enable 0
#define DT_N_S_soc_S_serial_44003000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_44003000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_44003000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_de_invert 0
#define DT_N_S_soc_S_serial_44003000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_44003000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_44003000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_parity "none"
#define DT_N_S_soc_S_serial_44003000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_44003000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_44003000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_44003000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_44003000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_serial_44003000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44003000, parity, 0)
#define DT_N_S_soc_S_serial_44003000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44003000, parity, 0)
#define DT_N_S_soc_S_serial_44003000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44003000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44003000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_44003000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_status "disabled"
#define DT_N_S_soc_S_serial_44003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_44003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_44003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_44003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_44003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_44003000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44003000, status, 0)
#define DT_N_S_soc_S_serial_44003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44003000, status, 0)
#define DT_N_S_soc_S_serial_44003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_status_LEN 1
#define DT_N_S_soc_S_serial_44003000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_44003000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_44003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44003000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_44003000, compatible, 1)
#define DT_N_S_soc_S_serial_44003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44003000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_44003000, compatible, 1)
#define DT_N_S_soc_S_serial_44003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44003000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_44003000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44003000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_44003000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44003000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_44003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_44003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_44003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_44003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_tx_invert 0
#define DT_N_S_soc_S_serial_44003000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_44003000_P_rx_invert 0
#define DT_N_S_soc_S_serial_44003000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/spi@4000b000
 *
 * Node identifier: DT_N_S_soc_S_spi_4000b000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4000b000_PATH "/soc/spi@4000b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4000b000_FULL_NAME "spi@4000b000"
#define DT_N_S_soc_S_spi_4000b000_FULL_NAME_UNQUOTED spi@4000b000
#define DT_N_S_soc_S_spi_4000b000_FULL_NAME_TOKEN spi_4000b000
#define DT_N_S_soc_S_spi_4000b000_FULL_NAME_UPPER_TOKEN SPI_4000B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4000b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_4000b000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_4000b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_4000b000_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_4000b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_4000b000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_4000b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_4000b000_HASH FVOVezl03HOLIaUk5b9M0U8qZQVbdfYqZ1OeFCAHK7w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4000b000_ORD 40
#define DT_N_S_soc_S_spi_4000b000_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4000b000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4000b000_EXISTS 1
#define DT_N_INST_3_st_stm32h7_spi    DT_N_S_soc_S_spi_4000b000
#define DT_N_INST_3_st_stm32_spi_fifo DT_N_S_soc_S_spi_4000b000
#define DT_N_INST_3_st_stm32_spi      DT_N_S_soc_S_spi_4000b000
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_4000b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4000b000_REG_NUM 1
#define DT_N_S_soc_S_spi_4000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_REG_IDX_0_VAL_ADDRESS 1073786880 /* 0x4000b000 */
#define DT_N_S_soc_S_spi_4000b000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_4000b000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4000b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4000b000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_4000b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_4000b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_4000b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_4000b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4000b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4000b000_P_midi_clock 0
#define DT_N_S_soc_S_spi_4000b000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_4000b000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_4000b000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_reg {1073786880 /* 0x4000b000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_4000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_reg_IDX_0 1073786880
#define DT_N_S_soc_S_spi_4000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_4000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_4000b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_4000b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_4000b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_status "disabled"
#define DT_N_S_soc_S_spi_4000b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_4000b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_4000b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4000b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_4000b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4000b000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4000b000, status, 0)
#define DT_N_S_soc_S_spi_4000b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4000b000, status, 0)
#define DT_N_S_soc_S_spi_4000b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000b000_P_status_LEN 1
#define DT_N_S_soc_S_spi_4000b000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_4000b000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_4000b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4000b000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 2)
#define DT_N_S_soc_S_spi_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4000b000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 2)
#define DT_N_S_soc_S_spi_4000b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4000b000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4000b000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000b000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000b000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_4000b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_spi_4000b000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_4000b000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_spi_4000b000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4000b000, clocks, 0)
#define DT_N_S_soc_S_spi_4000b000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4000b000, clocks, 0)
#define DT_N_S_soc_S_spi_4000b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4000b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000b000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4000b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000b000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_4000b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_4000b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4000b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_4000b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_4000b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@4000c000
 *
 * Node identifier: DT_N_S_soc_S_spi_4000c000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4000c000_PATH "/soc/spi@4000c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4000c000_FULL_NAME "spi@4000c000"
#define DT_N_S_soc_S_spi_4000c000_FULL_NAME_UNQUOTED spi@4000c000
#define DT_N_S_soc_S_spi_4000c000_FULL_NAME_TOKEN spi_4000c000
#define DT_N_S_soc_S_spi_4000c000_FULL_NAME_UPPER_TOKEN SPI_4000C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4000c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_4000c000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_4000c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_4000c000_FOREACH_NODELABEL(fn) fn(spi3)
#define DT_N_S_soc_S_spi_4000c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_4000c000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_4000c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_4000c000_HASH IEUFDHj8x1K0qnFx_kbfQ1myhTw9rWFElEY8AeiJrek

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4000c000_ORD 41
#define DT_N_S_soc_S_spi_4000c000_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4000c000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4000c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4000c000_EXISTS 1
#define DT_N_INST_4_st_stm32h7_spi    DT_N_S_soc_S_spi_4000c000
#define DT_N_INST_4_st_stm32_spi_fifo DT_N_S_soc_S_spi_4000c000
#define DT_N_INST_4_st_stm32_spi      DT_N_S_soc_S_spi_4000c000
#define DT_N_NODELABEL_spi3           DT_N_S_soc_S_spi_4000c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4000c000_REG_NUM 1
#define DT_N_S_soc_S_spi_4000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_REG_IDX_0_VAL_ADDRESS 1073790976 /* 0x4000c000 */
#define DT_N_S_soc_S_spi_4000c000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_4000c000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4000c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4000c000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_4000c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_4000c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_4000c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_4000c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4000c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4000c000_P_midi_clock 0
#define DT_N_S_soc_S_spi_4000c000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_4000c000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_4000c000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_reg {1073790976 /* 0x4000c000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_4000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_reg_IDX_0 1073790976
#define DT_N_S_soc_S_spi_4000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_4000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_4000c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_4000c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_4000c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_status "disabled"
#define DT_N_S_soc_S_spi_4000c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_4000c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_4000c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4000c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_4000c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4000c000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4000c000, status, 0)
#define DT_N_S_soc_S_spi_4000c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4000c000, status, 0)
#define DT_N_S_soc_S_spi_4000c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000c000_P_status_LEN 1
#define DT_N_S_soc_S_spi_4000c000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_4000c000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_4000c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4000c000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 2)
#define DT_N_S_soc_S_spi_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4000c000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 2)
#define DT_N_S_soc_S_spi_4000c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4000c000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4000c000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4000c000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000c000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_4000c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_spi_4000c000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_4000c000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_4000c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4000c000, clocks, 0)
#define DT_N_S_soc_S_spi_4000c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4000c000, clocks, 0)
#define DT_N_S_soc_S_spi_4000c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4000c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4000c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4000c000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_4000c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_4000c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4000c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_4000c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_4000c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@44004000
 *
 * Node identifier: DT_N_S_soc_S_spi_44004000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_44004000_PATH "/soc/spi@44004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_44004000_FULL_NAME "spi@44004000"
#define DT_N_S_soc_S_spi_44004000_FULL_NAME_UNQUOTED spi@44004000
#define DT_N_S_soc_S_spi_44004000_FULL_NAME_TOKEN spi_44004000
#define DT_N_S_soc_S_spi_44004000_FULL_NAME_UPPER_TOKEN SPI_44004000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_44004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_44004000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_44004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_44004000_FOREACH_NODELABEL(fn) fn(spi1)
#define DT_N_S_soc_S_spi_44004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44004000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_44004000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_44004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_44004000_HASH dS19c5tVgNCZWSOjSzbuKQ2rWlfwuE3PQPKRtD3o7mI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_44004000_ORD 42
#define DT_N_S_soc_S_spi_44004000_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_44004000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_44004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_44004000_EXISTS 1
#define DT_N_INST_2_st_stm32h7_spi    DT_N_S_soc_S_spi_44004000
#define DT_N_INST_2_st_stm32_spi_fifo DT_N_S_soc_S_spi_44004000
#define DT_N_INST_2_st_stm32_spi      DT_N_S_soc_S_spi_44004000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_44004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_44004000_REG_NUM 1
#define DT_N_S_soc_S_spi_44004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_REG_IDX_0_VAL_ADDRESS 1140867072 /* 0x44004000 */
#define DT_N_S_soc_S_spi_44004000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_44004000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_44004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_44004000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_44004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_44004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_44004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_44004000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_44004000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44004000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44004000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44004000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_44004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_44004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_44004000_P_midi_clock 0
#define DT_N_S_soc_S_spi_44004000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_44004000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_44004000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_reg {1140867072 /* 0x44004000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_44004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_reg_IDX_0 1140867072
#define DT_N_S_soc_S_spi_44004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_44004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_44004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_44004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_44004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_status "disabled"
#define DT_N_S_soc_S_spi_44004000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_44004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_44004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_44004000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_44004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_44004000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44004000, status, 0)
#define DT_N_S_soc_S_spi_44004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44004000, status, 0)
#define DT_N_S_soc_S_spi_44004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44004000_P_status_LEN 1
#define DT_N_S_soc_S_spi_44004000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_44004000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_44004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44004000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 2)
#define DT_N_S_soc_S_spi_44004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44004000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 2)
#define DT_N_S_soc_S_spi_44004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44004000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44004000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44004000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44004000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_44004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_spi_44004000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_44004000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_spi_44004000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44004000, clocks, 0)
#define DT_N_S_soc_S_spi_44004000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44004000, clocks, 0)
#define DT_N_S_soc_S_spi_44004000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44004000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44004000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_44004000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_44004000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_44004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_44004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_44004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi4_miso_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_PATH "/soc/pin-controller@50002000/spi4_miso_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FULL_NAME "spi4_miso_pe13"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FULL_NAME_UNQUOTED spi4_miso_pe13
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FULL_NAME_TOKEN spi4_miso_pe13
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FULL_NAME_UPPER_TOKEN SPI4_MISO_PE13

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_NODELABEL(fn) fn(spi4_miso_pe13)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi4_miso_pe13, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_HASH X_SJN7wFKTXso_fwtKESRIqWQqDDTHapF5EmrTBjwgg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_ORD 43
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_SUPPORTS_ORDS \
	47, /* /soc/spi@44005000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_EXISTS 1
#define DT_N_NODELABEL_spi4_miso_pe13 DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_pinmux 2469
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi4_mosi_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_PATH "/soc/pin-controller@50002000/spi4_mosi_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FULL_NAME "spi4_mosi_pe14"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FULL_NAME_UNQUOTED spi4_mosi_pe14
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FULL_NAME_TOKEN spi4_mosi_pe14
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FULL_NAME_UPPER_TOKEN SPI4_MOSI_PE14

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_NODELABEL(fn) fn(spi4_mosi_pe14)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi4_mosi_pe14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_HASH _ybXQpg_Tyu0VlQn43zeCDK2WF8Rpzb0vjaT5ph9oa0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_ORD 44
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_SUPPORTS_ORDS \
	47, /* /soc/spi@44005000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_EXISTS 1
#define DT_N_NODELABEL_spi4_mosi_pe14 DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_pinmux 2501
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi4_nss_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_PATH "/soc/pin-controller@50002000/spi4_nss_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FULL_NAME "spi4_nss_pe11"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FULL_NAME_UNQUOTED spi4_nss_pe11
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FULL_NAME_TOKEN spi4_nss_pe11
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FULL_NAME_UPPER_TOKEN SPI4_NSS_PE11

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_NODELABEL(fn) fn(spi4_nss_pe11)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi4_nss_pe11, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_HASH d3W71GrYCgkwRX4diA9FkspdrWMudRdi4v_s_ta5_k4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_ORD 45
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_SUPPORTS_ORDS \
	47, /* /soc/spi@44005000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_EXISTS 1
#define DT_N_NODELABEL_spi4_nss_pe11 DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_pinmux 2405
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi4_sck_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_PATH "/soc/pin-controller@50002000/spi4_sck_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FULL_NAME "spi4_sck_pe12"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FULL_NAME_UNQUOTED spi4_sck_pe12
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FULL_NAME_TOKEN spi4_sck_pe12
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FULL_NAME_UPPER_TOKEN SPI4_SCK_PE12

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_NODELABEL(fn) fn(spi4_sck_pe12)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi4_sck_pe12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_HASH 9khtxYzXHpoLXkeYybiqoXaUbhZ09rfGlJvBwwWXu0o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_ORD 46
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_SUPPORTS_ORDS \
	47, /* /soc/spi@44005000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_EXISTS 1
#define DT_N_NODELABEL_spi4_sck_pe12 DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_pinmux 2437
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@44005000
 *
 * Node identifier: DT_N_S_soc_S_spi_44005000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_44005000_PATH "/soc/spi@44005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_44005000_FULL_NAME "spi@44005000"
#define DT_N_S_soc_S_spi_44005000_FULL_NAME_UNQUOTED spi@44005000
#define DT_N_S_soc_S_spi_44005000_FULL_NAME_TOKEN spi_44005000
#define DT_N_S_soc_S_spi_44005000_FULL_NAME_UPPER_TOKEN SPI_44005000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_44005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_44005000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_44005000_NODELABEL_NUM 2
#define DT_N_S_soc_S_spi_44005000_FOREACH_NODELABEL(fn) fn(spi4) fn(arduino_spi)
#define DT_N_S_soc_S_spi_44005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi4, __VA_ARGS__) fn(arduino_spi, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_44005000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_44005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_44005000_HASH trlRY95rh_R2I02in27aO0nWBr62bbckitMjkyARwUI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_44005000_ORD 47
#define DT_N_S_soc_S_spi_44005000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_44005000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	43, /* /soc/pin-controller@50002000/spi4_miso_pe13 */ \
	44, /* /soc/pin-controller@50002000/spi4_mosi_pe14 */ \
	45, /* /soc/pin-controller@50002000/spi4_nss_pe11 */ \
	46, /* /soc/pin-controller@50002000/spi4_sck_pe12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_44005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_44005000_EXISTS 1
#define DT_N_INST_0_st_stm32h7_spi    DT_N_S_soc_S_spi_44005000
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_44005000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_44005000
#define DT_N_NODELABEL_spi4           DT_N_S_soc_S_spi_44005000
#define DT_N_NODELABEL_arduino_spi    DT_N_S_soc_S_spi_44005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_44005000_REG_NUM 1
#define DT_N_S_soc_S_spi_44005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_REG_IDX_0_VAL_ADDRESS 1140871168 /* 0x44005000 */
#define DT_N_S_soc_S_spi_44005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_44005000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_44005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_44005000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_44005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_spi_44005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_44005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_44005000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_44005000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44005000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44005000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44005000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_44005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_44005000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_44005000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_44005000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_44005000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_44005000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11
#define DT_N_S_soc_S_spi_44005000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12
#define DT_N_S_soc_S_spi_44005000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13
#define DT_N_S_soc_S_spi_44005000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14

/* Generic property macros: */
#define DT_N_S_soc_S_spi_44005000_P_midi_clock 0
#define DT_N_S_soc_S_spi_44005000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_44005000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_44005000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_reg {1140871168 /* 0x44005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_44005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_reg_IDX_0 1140871168
#define DT_N_S_soc_S_spi_44005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_44005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_44005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_spi_44005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_44005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44005000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44005000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44005000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44005000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_44005000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_status "okay"
#define DT_N_S_soc_S_spi_44005000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_44005000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_44005000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_44005000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_44005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_44005000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44005000, status, 0)
#define DT_N_S_soc_S_spi_44005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44005000, status, 0)
#define DT_N_S_soc_S_spi_44005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_status_LEN 1
#define DT_N_S_soc_S_spi_44005000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_44005000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_44005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44005000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 2)
#define DT_N_S_soc_S_spi_44005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44005000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 2)
#define DT_N_S_soc_S_spi_44005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44005000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44005000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44005000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_44005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_spi_44005000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_44005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_clocks_IDX_0_VAL_bits 512
#define DT_N_S_soc_S_spi_44005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44005000, clocks, 0)
#define DT_N_S_soc_S_spi_44005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44005000, clocks, 0)
#define DT_N_S_soc_S_spi_44005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44005000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_44005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_44005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_44005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_44005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_44005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi5_miso_pf8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_PATH "/soc/pin-controller@50002000/spi5_miso_pf8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FULL_NAME "spi5_miso_pf8"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FULL_NAME_UNQUOTED spi5_miso_pf8
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FULL_NAME_TOKEN spi5_miso_pf8
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FULL_NAME_UPPER_TOKEN SPI5_MISO_PF8

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_NODELABEL(fn) fn(spi5_miso_pf8)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi5_miso_pf8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_HASH Dg3F28LmYdEhO6qYHr5XW3JbE2lWQBI6gUUsunoBBjA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_ORD 48
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_SUPPORTS_ORDS \
	52, /* /soc/spi@44009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_EXISTS 1
#define DT_N_NODELABEL_spi5_miso_pf8 DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_pinmux 2821
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi5_mosi_pf9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_PATH "/soc/pin-controller@50002000/spi5_mosi_pf9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FULL_NAME "spi5_mosi_pf9"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FULL_NAME_UNQUOTED spi5_mosi_pf9
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FULL_NAME_TOKEN spi5_mosi_pf9
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FULL_NAME_UPPER_TOKEN SPI5_MOSI_PF9

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_NODELABEL(fn) fn(spi5_mosi_pf9)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi5_mosi_pf9, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_HASH ffPNtF_nOoBzlWqIOB5eppQqXq7BCI8k7LGMLfcpZBY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_ORD 49
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_SUPPORTS_ORDS \
	52, /* /soc/spi@44009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_EXISTS 1
#define DT_N_NODELABEL_spi5_mosi_pf9 DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_pinmux 2853
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi5_nss_pf6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_PATH "/soc/pin-controller@50002000/spi5_nss_pf6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FULL_NAME "spi5_nss_pf6"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FULL_NAME_UNQUOTED spi5_nss_pf6
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FULL_NAME_TOKEN spi5_nss_pf6
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FULL_NAME_UPPER_TOKEN SPI5_NSS_PF6

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_NODELABEL(fn) fn(spi5_nss_pf6)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi5_nss_pf6, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_HASH XSYb947XIcbCM163tnggXWqU2709Sp0SVZ_OjjfAGLY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_ORD 50
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_SUPPORTS_ORDS \
	52, /* /soc/spi@44009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_EXISTS 1
#define DT_N_NODELABEL_spi5_nss_pf6 DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_pinmux 2757
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/spi5_sck_pf7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_PATH "/soc/pin-controller@50002000/spi5_sck_pf7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FULL_NAME "spi5_sck_pf7"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FULL_NAME_UNQUOTED spi5_sck_pf7
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FULL_NAME_TOKEN spi5_sck_pf7
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FULL_NAME_UPPER_TOKEN SPI5_SCK_PF7

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_NODELABEL(fn) fn(spi5_sck_pf7)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi5_sck_pf7, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_HASH Y5crSuU21ouRi2rZO2jXaa3qxXdBiRVeDFJ_VycrlC4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_ORD 51
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_REQUIRES_ORDS \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_SUPPORTS_ORDS \
	52, /* /soc/spi@44009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_EXISTS 1
#define DT_N_NODELABEL_spi5_sck_pf7 DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_pinmux 2789
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@44009000
 *
 * Node identifier: DT_N_S_soc_S_spi_44009000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_44009000_PATH "/soc/spi@44009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_44009000_FULL_NAME "spi@44009000"
#define DT_N_S_soc_S_spi_44009000_FULL_NAME_UNQUOTED spi@44009000
#define DT_N_S_soc_S_spi_44009000_FULL_NAME_TOKEN spi_44009000
#define DT_N_S_soc_S_spi_44009000_FULL_NAME_UPPER_TOKEN SPI_44009000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_44009000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_44009000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_44009000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_44009000_FOREACH_NODELABEL(fn) fn(spi5)
#define DT_N_S_soc_S_spi_44009000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi5, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_44009000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_44009000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_44009000_HASH KERX3WrLlsJc7jFQyoAxn3x0oIc4boACwjqzpT_8EIA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_44009000_ORD 52
#define DT_N_S_soc_S_spi_44009000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_44009000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	48, /* /soc/pin-controller@50002000/spi5_miso_pf8 */ \
	49, /* /soc/pin-controller@50002000/spi5_mosi_pf9 */ \
	50, /* /soc/pin-controller@50002000/spi5_nss_pf6 */ \
	51, /* /soc/pin-controller@50002000/spi5_sck_pf7 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_44009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_44009000_EXISTS 1
#define DT_N_INST_1_st_stm32h7_spi    DT_N_S_soc_S_spi_44009000
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_44009000
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_44009000
#define DT_N_NODELABEL_spi5           DT_N_S_soc_S_spi_44009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_44009000_REG_NUM 1
#define DT_N_S_soc_S_spi_44009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_REG_IDX_0_VAL_ADDRESS 1140887552 /* 0x44009000 */
#define DT_N_S_soc_S_spi_44009000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_44009000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_44009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_44009000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_44009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_spi_44009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_44009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_44009000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_44009000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44009000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44009000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44009000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_44009000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_44009000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_44009000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_44009000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_44009000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_44009000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6
#define DT_N_S_soc_S_spi_44009000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7
#define DT_N_S_soc_S_spi_44009000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8
#define DT_N_S_soc_S_spi_44009000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9

/* Generic property macros: */
#define DT_N_S_soc_S_spi_44009000_P_midi_clock 0
#define DT_N_S_soc_S_spi_44009000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_44009000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_44009000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_reg {1140887552 /* 0x44009000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_44009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_reg_IDX_0 1140887552
#define DT_N_S_soc_S_spi_44009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_44009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_interrupts {85 /* 0x55 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_44009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_spi_44009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_44009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44009000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44009000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44009000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44009000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_44009000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_status "okay"
#define DT_N_S_soc_S_spi_44009000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_44009000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_44009000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_44009000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_44009000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_44009000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44009000, status, 0)
#define DT_N_S_soc_S_spi_44009000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44009000, status, 0)
#define DT_N_S_soc_S_spi_44009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_status_LEN 1
#define DT_N_S_soc_S_spi_44009000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_44009000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_44009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44009000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 2)
#define DT_N_S_soc_S_spi_44009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44009000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 2)
#define DT_N_S_soc_S_spi_44009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44009000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44009000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44009000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_44009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_spi_44009000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_44009000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_spi_44009000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44009000, clocks, 0)
#define DT_N_S_soc_S_spi_44009000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44009000, clocks, 0)
#define DT_N_S_soc_S_spi_44009000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44009000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44009000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44009000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_44009000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_44009000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_44009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_44009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_44009000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_e000e010_HASH aZrzPLAIRgEwRZJIvTCzJONA6gPgc4QlhkiU5oWGArA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 53
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@4000a000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_4000a000
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_4000a000_PATH "/soc/watchdog@4000a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_4000a000_FULL_NAME "watchdog@4000a000"
#define DT_N_S_soc_S_watchdog_4000a000_FULL_NAME_UNQUOTED watchdog@4000a000
#define DT_N_S_soc_S_watchdog_4000a000_FULL_NAME_TOKEN watchdog_4000a000
#define DT_N_S_soc_S_watchdog_4000a000_FULL_NAME_UPPER_TOKEN WATCHDOG_4000A000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_4000a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_4000a000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_4000a000_NODELABEL_NUM 2
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_NODELABEL(fn) fn(wwdg) fn(wwdg1)
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wwdg, __VA_ARGS__) fn(wwdg1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_4000a000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_4000a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_4000a000_HASH NRsBdlcmgXjkz0n3uY4bryyXf8OzNIpptzASTFlIojg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_4000a000_ORD 54
#define DT_N_S_soc_S_watchdog_4000a000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_4000a000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_4000a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_4000a000_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_4000a000
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_4000a000
#define DT_N_NODELABEL_wwdg1                 DT_N_S_soc_S_watchdog_4000a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_4000a000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_4000a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_REG_IDX_0_VAL_ADDRESS 1073782784 /* 0x4000a000 */
#define DT_N_S_soc_S_watchdog_4000a000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_4000a000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_4000a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_4000a000_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_4000a000_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_4000a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_4000a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_COMPAT_MODEL_IDX_0 "stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_4000a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_4000a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_4000a000_P_reg {1073782784 /* 0x4000a000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_4000a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_reg_IDX_0 1073782784
#define DT_N_S_soc_S_watchdog_4000a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_4000a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_4000a000, clocks, 0)
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_4000a000, clocks, 0)
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_4000a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_4000a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_4000a000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_4000a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_4000a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_4000a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_4000a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_4000a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_4000a000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_4000a000, status, 0)
#define DT_N_S_soc_S_watchdog_4000a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_4000a000, status, 0)
#define DT_N_S_soc_S_watchdog_4000a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4000a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4000a000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_4000a000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-window-watchdog
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_IDX_0_STRING_TOKEN st_stm32_window_watchdog
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WINDOW_WATCHDOG
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_4000a000, compatible, 0)
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_4000a000, compatible, 0)
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_4000a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_4000a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_4000a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_4000a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_4000a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_4000a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_4000a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_4000a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50003000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_PATH "/soc/pin-controller@50002000/gpio@50003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FULL_NAME "gpio@50003000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FULL_NAME_UNQUOTED gpio@50003000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FULL_NAME_TOKEN gpio_50003000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FULL_NAME_UPPER_TOKEN GPIO_50003000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_NODELABEL(fn) fn(gpiob)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiob, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_HASH w7nYrsWYqjUuxyE6XG0qPJok8utcvhBNOrS4z4FfeY0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_ORD 55
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_REG_IDX_0_VAL_ADDRESS 1342189568 /* 0x50003000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_reg {1342189568 /* 0x50003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_reg_IDX_0 1342189568
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50004000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_PATH "/soc/pin-controller@50002000/gpio@50004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FULL_NAME "gpio@50004000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FULL_NAME_UNQUOTED gpio@50004000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FULL_NAME_TOKEN gpio_50004000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FULL_NAME_UPPER_TOKEN GPIO_50004000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_NODELABEL(fn) fn(gpioc)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioc, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_HASH p0f9sb3TP2w66UFvXhlsOr1S2wrWwtvYnPzpfbgs1uo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_ORD 56
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_REG_IDX_0_VAL_ADDRESS 1342193664 /* 0x50004000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_reg {1342193664 /* 0x50004000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_reg_IDX_0 1342193664
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50005000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_PATH "/soc/pin-controller@50002000/gpio@50005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FULL_NAME "gpio@50005000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FULL_NAME_UNQUOTED gpio@50005000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FULL_NAME_TOKEN gpio_50005000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FULL_NAME_UPPER_TOKEN GPIO_50005000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_NODELABEL(fn) fn(gpiod)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiod, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_HASH _q3rKoq9_wk0VrNhM26aq8h46NxmrHnWo5RwHUhvBYc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_ORD 57
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_REG_IDX_0_VAL_ADDRESS 1342197760 /* 0x50005000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_reg {1342197760 /* 0x50005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_reg_IDX_0 1342197760
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50006000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_PATH "/soc/pin-controller@50002000/gpio@50006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FULL_NAME "gpio@50006000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FULL_NAME_UNQUOTED gpio@50006000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FULL_NAME_TOKEN gpio_50006000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FULL_NAME_UPPER_TOKEN GPIO_50006000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_NODELABEL(fn) fn(gpioe)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioe, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_HASH Wa0DipWOGPNVjpEISAhpybuvHgtA1_EHYxSw79Y_gvc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_ORD 58
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_REG_IDX_0_VAL_ADDRESS 1342201856 /* 0x50006000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_reg {1342201856 /* 0x50006000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_reg_IDX_0 1342201856
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50007000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_PATH "/soc/pin-controller@50002000/gpio@50007000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FULL_NAME "gpio@50007000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FULL_NAME_UNQUOTED gpio@50007000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FULL_NAME_TOKEN gpio_50007000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FULL_NAME_UPPER_TOKEN GPIO_50007000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_NODELABEL(fn) fn(gpiof)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiof, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_HASH 51KFcJb_e05nZR3nIdQ4GzsYkWCv7e1Iu4XIW6ggXFQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_ORD 59
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_REG_IDX_0_VAL_ADDRESS 1342205952 /* 0x50007000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_reg {1342205952 /* 0x50007000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_reg_IDX_0 1342205952
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@50008000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_PATH "/soc/pin-controller@50002000/gpio@50008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FULL_NAME "gpio@50008000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FULL_NAME_UNQUOTED gpio@50008000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FULL_NAME_TOKEN gpio_50008000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FULL_NAME_UPPER_TOKEN GPIO_50008000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_NODELABEL(fn) fn(gpiog)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiog, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_HASH GJhEqnkgcq59x_kJd4gmuxJnBIVRrfEeaIrcB1WM4LI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_ORD 60
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_REG_IDX_0_VAL_ADDRESS 1342210048 /* 0x50008000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_reg {1342210048 /* 0x50008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_reg_IDX_0 1342210048
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@5000a000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_PATH "/soc/pin-controller@50002000/gpio@5000a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FULL_NAME "gpio@5000a000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FULL_NAME_UNQUOTED gpio@5000a000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FULL_NAME_TOKEN gpio_5000a000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FULL_NAME_UPPER_TOKEN GPIO_5000A000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_NODELABEL(fn) fn(gpioi)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioi, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_HASH mz_QNbELGGrmdNUBcFTnCM_grBELFKCwgpAR0aiysSg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_ORD 61
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_EXISTS 1
#define DT_N_INST_8_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000
#define DT_N_NODELABEL_gpioi      DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_REG_IDX_0_VAL_ADDRESS 1342218240 /* 0x5000a000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_reg {1342218240 /* 0x5000a000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_reg_IDX_0 1342218240
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@5000b000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_PATH "/soc/pin-controller@50002000/gpio@5000b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FULL_NAME "gpio@5000b000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FULL_NAME_UNQUOTED gpio@5000b000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FULL_NAME_TOKEN gpio_5000b000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FULL_NAME_UPPER_TOKEN GPIO_5000B000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_NODELABEL(fn) fn(gpioj)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioj, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_HASH OEwzlpzF3y2UPFRlqh89EoReBZOQohBX1uWRoUDGgOc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_ORD 62
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_EXISTS 1
#define DT_N_INST_9_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000
#define DT_N_NODELABEL_gpioj      DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_REG_IDX_0_VAL_ADDRESS 1342222336 /* 0x5000b000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_reg {1342222336 /* 0x5000b000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_reg_IDX_0 1342222336
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_IDX_0_VAL_bits 512
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50002000/gpio@5000c000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_PATH "/soc/pin-controller@50002000/gpio@5000c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FULL_NAME "gpio@5000c000"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FULL_NAME_UNQUOTED gpio@5000c000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FULL_NAME_TOKEN gpio_5000c000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FULL_NAME_UPPER_TOKEN GPIO_5000C000

/* Node parent (/soc/pin-controller@50002000) identifier: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_PARENT DT_N_S_soc_S_pin_controller_50002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_NODELABEL(fn) fn(gpiok)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiok, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_HASH 8FdSRJ1T7JHeAo1DkXyhEvBWc_jVDowr5m80rkjLYZc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_ORD 63
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_REQUIRES_ORDS \
	8, /* /soc/rcc@50000000 */ \
	9, /* /soc/pin-controller@50002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_EXISTS 1
#define DT_N_INST_10_st_stm32_gpio DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000
#define DT_N_NODELABEL_gpiok       DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_REG_IDX_0_VAL_ADDRESS 1342226432 /* 0x5000c000 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_reg {1342226432 /* 0x5000c000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_reg_IDX_0 1342226432
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_IDX_0_VAL_bus 7
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_PATH "/soc/timers@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_FULL_NAME "timers@40001000"
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_UNQUOTED timers@40001000
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_TOKEN timers_40001000
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_UPPER_TOKEN TIMERS_40001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40001000_FOREACH_NODELABEL(fn) fn(timers3)
#define DT_N_S_soc_S_timers_40001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm) fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40001000_HASH Nsz_iy2H8UvqHZMouFTv3bvFrOuL3LyjaTTN24v0eBQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_ORD 64
#define DT_N_S_soc_S_timers_40001000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_SUPPORTS_ORDS \
	65, /* /soc/timers@40001000/counter */ \
	66, /* /soc/timers@40001000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id 319369217
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PATH "/soc/timers@40001000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40001000_S_counter_HASH kRqNwCO_GFQ9B_IU80aWEsZniZ2xLsueygEKHK_oRqE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD 65
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REQUIRES_ORDS \
	64, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40001000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PATH "/soc/timers@40001000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_HASH pqBkC80BFncuEtsUN1CGUKTlEfqcz3nRpq2rnbLyPIk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_ORD 66
#define DT_N_S_soc_S_timers_40001000_S_pwm_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REQUIRES_ORDS \
	64, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40001000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40003000
 *
 * Node identifier: DT_N_S_soc_S_timers_40003000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40003000_PATH "/soc/timers@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40003000_FULL_NAME "timers@40003000"
#define DT_N_S_soc_S_timers_40003000_FULL_NAME_UNQUOTED timers@40003000
#define DT_N_S_soc_S_timers_40003000_FULL_NAME_TOKEN timers_40003000
#define DT_N_S_soc_S_timers_40003000_FULL_NAME_UPPER_TOKEN TIMERS_40003000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40003000_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40003000_FOREACH_NODELABEL(fn) fn(timers5)
#define DT_N_S_soc_S_timers_40003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40003000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40003000_S_pwm) fn(DT_N_S_soc_S_timers_40003000_S_counter)
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40003000_S_counter)
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40003000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40003000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40003000_HASH OpfFXfki1E3zqt9EqYFfq_vUHlsowzRofrHUAYQeMtg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40003000_ORD 67
#define DT_N_S_soc_S_timers_40003000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40003000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@50000000 */ \
	22, /* /soc/rcc@50000000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40003000_SUPPORTS_ORDS \
	68, /* /soc/timers@40003000/counter */ \
	69, /* /soc/timers@40003000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40003000_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40003000
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40003000_REG_NUM 1
#define DT_N_S_soc_S_timers_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_timers_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40003000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40003000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40003000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40003000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40003000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40003000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_timers_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_50000000
#define DT_N_S_soc_S_timers_40003000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40003000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40003000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000, clocks, 0)
#define DT_N_S_soc_S_timers_40003000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000, clocks, 0)
#define DT_N_S_soc_S_timers_40003000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40003000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_50000000_S_reset_controller
#define DT_N_S_soc_S_timers_40003000_P_resets_IDX_0_VAL_id 319369219
#define DT_N_S_soc_S_timers_40003000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000, resets, 0)
#define DT_N_S_soc_S_timers_40003000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000, resets, 0)
#define DT_N_S_soc_S_timers_40003000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40003000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40003000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40003000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_status "disabled"
#define DT_N_S_soc_S_timers_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40003000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000, status, 0)
#define DT_N_S_soc_S_timers_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000, status, 0)
#define DT_N_S_soc_S_timers_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000, compatible, 0)
#define DT_N_S_soc_S_timers_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000, compatible, 0)
#define DT_N_S_soc_S_timers_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40003000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40003000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40003000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40003000_S_counter_PATH "/soc/timers@40003000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40003000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40003000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40003000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40003000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40003000) identifier: */
#define DT_N_S_soc_S_timers_40003000_S_counter_PARENT DT_N_S_soc_S_timers_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40003000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40003000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40003000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40003000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40003000_S_counter_HASH EZKLcB148uEltY_LdxLBnYuD1pzPwks2Asi6Yj49mrA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40003000_S_counter_ORD 68
#define DT_N_S_soc_S_timers_40003000_S_counter_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40003000_S_counter_REQUIRES_ORDS \
	67, /* /soc/timers@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40003000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40003000_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40003000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40003000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40003000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40003000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40003000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40003000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40003000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40003000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40003000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40003000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40003000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40003000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40003000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_PATH "/soc/timers@40003000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40003000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40003000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40003000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40003000) identifier: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_PARENT DT_N_S_soc_S_timers_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timers_40003000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40003000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_HASH f8xSAzl5SNnuNAS7kP59mTZ_n0T6c5ymoPb3P9X97Sw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_ORD 69
#define DT_N_S_soc_S_timers_40003000_S_pwm_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_REQUIRES_ORDS \
	67, /* /soc/timers@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40003000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40003000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40003000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40003000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40003000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40003000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40003000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40003000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40003000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash        DT_N_S_memory0_0
#define DT_CHOSEN_zephyr_flash_EXISTS 1
#define DT_CHOSEN_zephyr_sram         DT_N_S_memory1_10000000
#define DT_CHOSEN_zephyr_sram_EXISTS  1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_rcc_50000000) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_5000d000) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8) fn(DT_N_S_soc_S_watchdog_4000a000) fn(DT_N_S_soc_S_dma_48000000) fn(DT_N_S_soc_S_dma_48001000) fn(DT_N_S_soc_S_dmamux_48002000) fn(DT_N_S_soc_S_spi_44004000) fn(DT_N_S_soc_S_spi_4000b000) fn(DT_N_S_soc_S_spi_4000c000) fn(DT_N_S_soc_S_spi_44005000) fn(DT_N_S_soc_S_spi_44009000) fn(DT_N_S_soc_S_serial_4000e000) fn(DT_N_S_soc_S_serial_4000f000) fn(DT_N_S_soc_S_serial_40010000) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_44003000) fn(DT_N_S_soc_S_serial_40018000) fn(DT_N_S_soc_S_serial_40019000) fn(DT_N_S_soc_S_i2c_40015000) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001000_S_pwm) fn(DT_N_S_soc_S_timers_40001000_S_counter) fn(DT_N_S_soc_S_timers_40003000) fn(DT_N_S_soc_S_timers_40003000_S_pwm) fn(DT_N_S_soc_S_timers_40003000_S_counter) fn(DT_N_S_soc_S_mailbox_4c001000) fn(DT_N_S_soc_S_display_controller_5a001000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory0_0) fn(DT_N_S_memory1_10000000) fn(DT_N_S_smbus5) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_rcc_50000000) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_5000d000) fn(DT_N_S_soc_S_pin_controller_50002000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8) fn(DT_N_S_soc_S_spi_44005000) fn(DT_N_S_soc_S_spi_44009000) fn(DT_N_S_soc_S_serial_4000f000) fn(DT_N_S_soc_S_serial_40018000) fn(DT_N_S_soc_S_i2c_40015000) fn(DT_N_S_soc_S_mailbox_4c001000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory0_0) fn(DT_N_S_memory1_10000000) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_dmamux_48002000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_44003000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40003000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40003000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_mailbox_4c001000, __VA_ARGS__) fn(DT_N_S_soc_S_display_controller_5a001000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory0_0, __VA_ARGS__) fn(DT_N_S_memory1_10000000, __VA_ARGS__) fn(DT_N_S_smbus5, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_i2c5_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_miso_pf8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_mosi_pf9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_nss_pf6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi4_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_spi5_sck_pf7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_rx_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_rx_pe7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_usart3_tx_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_uart7_tx_pe8, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_mailbox_4c001000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory0_0, __VA_ARGS__) fn(DT_N_S_memory1_10000000, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32mp157c_dk2 1
#define DT_COMPAT_HAS_OKAY_st_stm32mp157 1
#define DT_COMPAT_HAS_OKAY_st_stm32mp1 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32mp1_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc_rctl 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32h7_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi_fifo 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ipcc_mailbox 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_arduino_header_r3 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32mp157c_dk2_NUM_OKAY 1
#define DT_N_INST_st_stm32mp157_NUM_OKAY 1
#define DT_N_INST_st_stm32mp1_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32mp1_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_rctl_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 11
#define DT_N_INST_st_stm32h7_spi_NUM_OKAY 2
#define DT_N_INST_st_stm32_spi_fifo_NUM_OKAY 2
#define DT_N_INST_st_stm32_spi_NUM_OKAY 2
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 2
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 1
#define DT_N_INST_st_stm32_ipcc_mailbox_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 2
#define DT_N_INST_arduino_header_r3_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32mp157c_dk2(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32mp157c_dk2(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32mp157c_dk2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32mp157c_dk2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32mp157(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32mp157(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32mp157(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32mp157(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32mp1(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32mp1(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32mp1(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32mp1(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32mp1_rcc(fn) fn(DT_N_S_soc_S_rcc_50000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32mp1_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_50000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32mp1_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32mp1_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc_rctl(fn) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc_rctl(fn, ...) fn(DT_N_S_soc_S_rcc_50000000_S_reset_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc_rctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc_rctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_5000d000)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_5000d000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_5000d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_50002000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50002000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50003000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50004000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50005000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50006000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50007000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_50009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000a000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000b000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50002000_S_gpio_5000c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32h7_spi(fn) fn(DT_N_S_soc_S_spi_44005000) fn(DT_N_S_soc_S_spi_44009000)
#define DT_FOREACH_OKAY_VARGS_st_stm32h7_spi(fn, ...) fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32h7_spi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32h7_spi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi_fifo(fn) fn(DT_N_S_soc_S_spi_44005000) fn(DT_N_S_soc_S_spi_44009000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi_fifo(fn, ...) fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi_fifo(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi_fifo(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_44005000) fn(DT_N_S_soc_S_spi_44009000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44009000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_4000f000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_4000f000) fn(DT_N_S_soc_S_serial_40018000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40018000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v2(fn) fn(DT_N_S_soc_S_i2c_40015000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v2(fn, ...) fn(DT_N_S_soc_S_i2c_40015000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_ipcc_mailbox(fn) fn(DT_N_S_soc_S_mailbox_4c001000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_ipcc_mailbox(fn, ...) fn(DT_N_S_soc_S_mailbox_4c001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_ipcc_mailbox(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_ipcc_mailbox(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory0_0) fn(DT_N_S_memory1_10000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory0_0, __VA_ARGS__) fn(DT_N_S_memory1_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_header_r3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
