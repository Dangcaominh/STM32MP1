	*(.text.cpu_idle)
	*(.text.arm_cntpct_get_sys_time)
	*(.text.plat_prng_add_jitter_entropy)
	*(.text.__cpu_spin_lock)
	*(.text.__cpu_spin_trylock)
	*(.text.__cpu_spin_unlock)
	*(.text.tlbi_all)
	*(.text.dcache_cleaninv_range)
	*(.text.dcache_inv_range)
	*(.text.do_dcsw_op)
	*(.text.dcache_op_louis)
	*(.text.dcache_op_all)
	*(.text.dcache_op_level1)
	*(.text.icache_inv_all)
	*(.text.thread_set_abt_sp)
	*(.text.thread_set_und_sp)
	*(.text.thread_set_irq_sp)
	*(.text.thread_set_fiq_sp)
	*(.text.thread_resume)
	*(.text.thread_save_state)
	*(.text.thread_init_vbar)
	*(.text.thread_unwind_user_mode)
	*(.text.thread_excp_vect)
	*(.text.thread_lazy_save_ns_vfp)
	*(.text.thread_lazy_restore_ns_vfp)
	*(.text.__thread_alloc_and_run.constprop.0)
	*(.text.thread_get_exceptions)
	*(.text.thread_set_exceptions)
	*(.text.thread_mask_exceptions)
	*(.text.thread_unmask_exceptions)
	*(.text.thread_alloc_and_run)
	*(.text.thread_pm_alloc_and_run)
	*(.text.thread_resume_from_rpc)
	*(.text.thread_is_in_normal_mode)
	*(.text.thread_state_free)
	*(.text.thread_init_per_cpu)
	*(.text.thread_kernel_save_vfp)
	*(.text.thread_kernel_restore_vfp)
	*(.text.thread_user_save_vfp)
	*(.text.thread_state_suspend)
	*(.text.thread_scall_handler)
	*(.text.mobj_get_va)
	*(.text.mobj_matches)
	*(.text.mobj_get_cookie)
	*(.text.rpc_shm_mobj_alloc)
	*(.text.thread_rpc_free_arg)
	*(.text.mobj_put)
	*(.text.thread_rpc_alloc_arg.constprop.0)
	*(.text.get_rpc_arg.constprop.0)
	*(.text.thread_handle_fast_smc)
	*(.text.thread_handle_std_smc)
	*(.text.thread_handle_pm)
	*(.text.thread_disable_prealloc_rpc_cache)
	*(.text.thread_enable_prealloc_rpc_cache)
	*(.text.thread_rpc_cmd)
	*(.text.thread_std_smc_entry)
	*(.text.thread_pm_entry)
	*(.text.thread_rpc)
	*(.text.thread_foreign_intr_exit)
	*(.text.__print_abort_info)
	*(.text.abort_print)
	*(.text.abort_print_error)
	*(.text.plat_abort_handler)
	*(.text.abort_handler)
	*(.text.vfp_is_enabled)
	*(.text.vfp_lazy_save_state_init)
	*(.text.vfp_lazy_save_state_final)
	*(.text.vfp_lazy_restore_state)
	*(.text.vfp_save_extension_regs)
	*(.text.vfp_restore_extension_regs)
	*(.text.vfp_write_fpexc)
	*(.text.vfp_read_fpexc)
	*(.text.vfp_write_fpscr)
	*(.text.vfp_read_fpscr)
	*(.text.get_core_pos_mpidr)
	*(.text.temp_set_mode)
	*(.text.read_mode_sp)
	*(.text.read_mode_lr)
	*(.text.plat_primary_init_early)
	*(.text.plat_get_random_stack_canaries)
	*(.text.init_sec_mon)
	*(.text.boot_init_secondary)
	*(.text.boot_set_core_ns_entry)
	*(.text.boot_core_release)
	*(.text.boot_core_hpen)
	*(.text.unhandled_cpu)
	*(.text.dummy.boot_init_primary_late)
	*(.text.dummy.__thread_std_smc_entry)
	*(.text.dummy.__thread_pm_entry)
	*(.text.dummy.core_init_mmu_map)
	*(.text.dummy.boot_init_primary_early)
	*(.text.arch_va2pa_helper)
	*(.text.cpu_mmu_enabled)
	*(.text.core_mmu_find_table)
	*(.text.core_mmu_set_entry_primitive)
	*(.text.core_mmu_user_mapping_is_active)
	*(.text.core_mmu_get_user_map)
	*(.text.core_mmu_set_user_map)
	*(.text.core_mmu_get_fault_type)
	*(.text.mobj_reg_shm_get_cookie)
	*(.text.mobj_reg_shm_matches)
	*(.text.cpu_spin_lock_xsave_no_dldetect)
	*(.text.reg_shm_unmap_helper)
	*(.text.cpu_spin_unlock_xrestore)
	*(.text.reg_shm_free_helper)
	*(.text.mobj_reg_shm_free)
	*(.text.mobj_reg_shm_get_pa)
	*(.text.mobj_reg_shm_alloc)
	*(.text.mobj_mapped_shm_alloc)
	*(.text.tee_entry_get_api_call_count)
	*(.text.tee_entry_get_api_uuid)
	*(.text.tee_entry_get_api_revision)
	*(.text.tee_entry_get_os_uuid)
	*(.text.tee_entry_get_os_revision)
	*(.text.__tee_entry_fast)
	*(.text.tee_entry_fast)
	*(.text.stm32_dbgmcu_base)
	*(.text.console_init)
	*(.text.stm32mp1_dbgmcu_get_chip_dev_id)
	*(.text.get_part_number.constprop.0)
	*(.text.boot_secondary_init_intc)
	*(.text.stm32_rcc_base)
	*(.text.get_gicd_base)
	*(.text.may_spin_lock)
	*(.text.may_spin_unlock)
	*(.text.stm32mp_bkpreg)
	*(.text.stm32mp_bkpsram_base)
	*(.text.stm32mp_stgen_base)
	*(.text.stm32mp_supports_second_core)
	*(.text.do_reset)
	*(.text.plat_cpu_reset_early)
	*(.text.plat_scmi_get_channel)
	*(.text.stm32_scmi_pm)
	*(.text.tzc_it_handler)
	*(.text.stm32mp_tzc_region0)
	*(.text.stm32mp_tzc_reset_region)
	*(.text.stm32mp1_tzc_pm)
	*(.text.stm32mp1_calib_pm)
	*(.text.pmic_regu_init)
	*(.text.pmic_sw_init)
	*(.text.atomic_stm32mp1_stpmic1_notif)
	*(.text.regu_lp_state2idx)
	*(.text.pmic_regu_pm)
	*(.text.pmic_list_voltages)
	*(.text.stm32_stpmic1_is_present)
	*(.text.stm32mp_pmic_apply_lp_config)
	*(.text.stm32mp_get_pmic)
	*(.text.stm32mp_put_pmic)
	*(.text.pmic_supplied_init)
	*(.text.pmic_get_voltage)
	*(.text.pmic_set_voltage)
	*(.text.pmic_get_state)
	*(.text.pmic_set_state)
	*(.text.pmic_it_handler)
	*(.text.plat_pmic2_supplied_init)
	*(.text.stm32mp1_pwr_regu_read_voltage)
	*(.text.vdd_hslv_pm)
	*(.text.stm32_pwr_base)
	*(.text.stm32mp1_pwr_regu_read_state)
	*(.text.stm32mp1_pwr_regu_set_state)
	*(.text.stm32mp_enable_fixed_vdd_hslv)
	*(.text.stm32mp1_pwr_itr_enable_nolock)
	*(.text.stm32mp1_pwr_op_raise_pi)
	*(.text.stm32mp1_pwr_op_raise_sgi)
	*(.text.stm32mp1_pwr_op_set_affinity)
	*(.text.stm32mp1_pwr_op_set_wake)
	*(.text.pwr_it_handler)
	*(.text.stm32mp1_pwr_op_add)
	*(.text.stm32mp1_pwr_itr_disable_nolock)
	*(.text.stm32mp1_pwr_op_unmask)
	*(.text.stm32mp1_pwr_op_enable)
	*(.text.stm32mp1_pwr_op_disable)
	*(.text.stm32mp1_pwr_op_mask)
	*(.text.sm_platform_handler)
	*(.text.pm_domain_scv_handler)
	*(.text.pwr_scv_handler)
	*(.text.load_earlyboot_pm_mailbox)
	*(.text.enable_pm_mailbox)
	*(.text.gate_pm_context_clocks.part.0)
	*(.text.gate_pm_context_clocks.constprop.0)
	*(.text.stm32mp_pm_wipe_context)
	*(.text.stm32mp_pm_save_context)
	*(.text.stm32mp_pm_restore_context)
	*(.text.stm32mp_pm_shutdown_context)
	*(.text.stm32mp_pm_call_bl2_lp_entry)
	*(.text.cpu_wfi)
	*(.text.rcc_wakeup_it_handler)
	*(.text.stm32_enter_cstop)
	*(.text.stm32_exit_cstop)
	*(.text.stm32_enter_cstop_shutdown)
	*(.text.stm32_enter_csleep)
	*(.text.stm32_pm_cpu_power_down_wfi)
	*(.text.stm32mp_sysram_resume)
	*(.text.stm32mp_cpu_reset_state)
	*(.text.get_pm_domain_state)
	*(.text.stm32mp1_is_retram_during_standby)
	*(.text.need_to_backup_cpu_context)
	*(.text.stm32mp1_set_pm_domain_state)
	*(.text.stm32mp1_get_lp_soc_mode)
	*(.text.plat_suspend)
	*(.text.psci_affinity_info)
	*(.text.stm32mp_register_online_cpu)
	*(.text.psci_cpu_on)
	*(.text.psci_cpu_off)
	*(.text.__psci_system_suspend)
	*(.text.psci_system_suspend)
	*(.text.__psci_system_off)
	*(.text.psci_system_off)
	*(.text.psci_system_reset)
	*(.text.psci_features)
	*(.text.psci_version)
	*(.text.sm_save_unbanked_regs)
	*(.text.sm_restore_unbanked_regs)
	*(.text.sm_smc_entry)
	*(.text.sm_fiq_entry)
	*(.text.sm_vect_table)
	*(.text.sm_vect_table_a15)
	*(.text.sm_vect_table_bpiall)
	*(.text.sm_init)
	*(.text.sm_get_nsec_ctx)
	*(.text.sm_from_nsec)
	*(.text.sm_pm_cpu_suspend_save)
	*(.text.sm_pm_cpu_suspend)
	*(.text.sm_pm_cpu_do_suspend)
	*(.text.sm_pm_cpu_resume)
	*(.text.sm_pm_cpu_do_resume)
	*(.text.smc_std_handler)
	*(.text.psci_cpu_suspend)
	*(.text.psci_migrate)
	*(.text.psci_migrate_info_type)
	*(.text.psci_migrate_info_up_cpu)
	*(.text.psci_mem_protect)
	*(.text.psci_mem_chk_range)
	*(.text.psci_system_reset2)
	*(.text.psci_node_hw_state)
	*(.text.tee_psci_handler)
	*(.text.psci_disable_smp)
	*(.text.psci_armv7_cpu_off)
	*(.text.crypto_rng_hw_is_registered)
	*(.text.crypto_rng_add_event)
	*(.text.crypto_rng_read)
	*(.text.tzc_configure_region)
	*(.text.tzc_fail_dump)
	*(.text.tzc_int_clear)
	*(.text.gic_init_setup)
	*(.text.gic_save_it)
	*(.text.gic_pm)
	*(.text.gic_op_set_affinity.part.0)
	*(.text.gic_op_raise_pi)
	*(.text.gic_op_disable)
	*(.text.gic_op_enable)
	*(.text.gic_it_set_cpu_mask.isra.0)
	*(.text.gic_op_set_affinity)
	*(.text.gic_op_add)
	*(.text.gic_op_raise_sgi)
	*(.text.gic_restore_it)
	*(.text.gic_cpu_init)
	*(.text.gic_set_pmr)
	*(.text.gic_set_ipriority)
	*(.text.interrupt_main_handler)
	*(.text.stm32_bsec_otp_setting)
	*(.text.bsec_base)
	*(.text.bsec_status)
	*(.text.state_is_invalid_mode)
	*(.text.check_no_error)
	*(.text.read_bsec_lock)
	*(.text.set_bsec_lock)
	*(.text.stm32_bsec_find_otp_in_nvmem_layout.part.0)
	*(.text.timeout_init_us.constprop.0)
	*(.text.power_up_safmem)
	*(.text.power_down_safmem.isra.0)
	*(.text.stm32_bsec_read_otp)
	*(.text.stm32_bsec_read_debug_conf)
	*(.text.stm32_bsec_write_debug_conf)
	*(.text.bsec_pm)
	*(.text.stm32_bsec_set_sr_lock)
	*(.text.stm32_bsec_set_sw_lock)
	*(.text.stm32_bsec_read_sr_lock)
	*(.text.stm32_bsec_shadow_register)
	*(.text.stm32_bsec_shadow_read_otp)
	*(.text.stm32_bsec_read_sw_lock)
	*(.text.stm32_bsec_write_otp)
	*(.text.stm32_bsec_find_otp_in_nvmem_layout)
	*(.text.cpu_opp_pm)
	*(.text.io_clrsetbits32)
	*(.text.stm32_gpio_get_level)
	*(.text.stm32_pinctrl_conf_free)
	*(.text.stm32_gpio_get_bank)
	*(.text.stm32_gpio_set_level.part.0)
	*(.text.stm32_gpio_set_level)
	*(.text.pin_is_secure)
	*(.text.stm32_gpio_set_conf_sec)
	*(.text.stm32_gpio_sec_config_pm)
	*(.text.set_gpio_cfg)
	*(.text.consumed_gpios_pm)
	*(.text.stm32_pinctrl_conf_apply)
	*(.text.get_base)
	*(.text.stm32_iwdg_it_ack)
	*(.text.stm32_iwdg_it_handler)
	*(.text.iwdg_wdt_get_timeleft)
	*(.text.stm32_iwdg_handle_big_timeout)
	*(.text.iwdg_wdt_init)
	*(.text.stm32_iwdg_pm)
	*(.text.iwdg_wdt_stop.part.0)
	*(.text.iwdg_refresh)
	*(.text.iwdg_wdt_refresh)
	*(.text.iwdg_wait_sync)
	*(.text.iwdg_wdt_stop)
	*(.text.iwdg_timeout_cnt.isra.0)
	*(.text.configure_timeout)
	*(.text.iwdg_wdt_start)
	*(.text.iwdg_wdt_set_timeout)
	*(.text.timeout_init_us)
	*(.text.i2c_ack_failed)
	*(.text.i2c_transfer_config)
	*(.text.is_thread_context)
	*(.text.lock_i2c_bus_access)
	*(.text.unlock_i2c_bus_access)
	*(.text.i2c_wait_stop)
	*(.text.wait_isr_event)
	*(.text.i2c_wait_txis)
	*(.text.stm32_i2c_read_write_membyte)
	*(.text.stm32_i2c_resume)
	*(.text.stm32_i2c_suspend)
	*(.text.stm32_ltdc_it_handler)
	*(.text.disable_rng_clock)
	*(.text.enable_rng_clock)
	*(.text.stm32_rng_pm)
	*(.text.conceal_seed_error)
	*(.text.stm32_rng_read)
	*(.text.hw_get_random_bytes)
	*(.text.stm32_rtc_read_calendar)
	*(.text.stm32_rtc_get_subsecond)
	*(.text.stm32_rtc_diff_date_ms)
	*(.text.stm32_rtc_it_handler)
	*(.text.stm32_rtc_fill_date.isra.0)
	*(.text.stm32_rtc_fill_time.isra.0)
	*(.text.stm32_rtc_get_calendar)
	*(.text.stm32_rtc_diff_calendar_ms)
	*(.text.stm32_rtc_get_timestamp)
	*(.text.stm32_rtc_is_timestamp_enable)
	*(.text.io_mask32_stm32shregs)
	*(.text.stm32_tamp_it_handler)
	*(.text.stm32_tamp_itamper_action)
	*(.text.stm32_tamp_etamper_action)
	*(.text.loc_chip_clk_is_enabled)
	*(.text.loc_have_rx_data)
	*(.text.loc_putc)
	*(.text.loc_flush)
	*(.text.loc_getchar)
	*(.text.stm32_uart_init)
	*(.text.load_provisioning)
	*(.text.provisioning_pm)
	*(.text.get_regulator_data)
	*(.text.voltage_to_index)
	*(.text.find_plat_mask)
	*(.text.stpmic1_regulator_levels_mv)
	*(.text.stpmic1_bo_pull_down_cfg)
	*(.text.stpmic1_bo_mask_reset_cfg)
	*(.text.stpmic1_register_read)
	*(.text.stpmic1_is_regulator_enabled)
	*(.text.stpmic1_regulator_voltage_get)
	*(.text.stpmic1_register_write)
	*(.text.stpmic1_lp_load_unpg)
	*(.text.stpmic1_register_update)
	*(.text.stpmic1_powerctrl_on)
	*(.text.stpmic1_switch_off)
	*(.text.stpmic1_regulator_enable)
	*(.text.stpmic1_regulator_disable)
	*(.text.stpmic1_regulator_voltage_set)
	*(.text.stpmic1_bo_pull_down_unpg)
	*(.text.stpmic1_bo_mask_reset_unpg)
	*(.text.stpmic1_lp_on_off_unpg)
	*(.text.stpmic1_lp_mode_unpg)
	*(.text.stpmic1_lp_voltage_unpg)
	*(.text.stpmic2_register_read)
	*(.text.stpmic2_register_write)
	*(.text.stpmic2_register_update)
	*(.text.stpmic2_update_en_crs)
	*(.text.stpmic2_regulator_set_state)
	*(.text.stpmic2_regulator_get_state)
	*(.text.stpmic2_regulator_levels_mv)
	*(.text.stpmic2_regulator_get_voltage)
	*(.text.stpmic2_regulator_set_voltage)
	*(.text.stpmic2_regulator_get_prop)
	*(.text.stpmic2_regulator_set_prop)
	*(.text.stpmic2_lp_set_state)
	*(.text.stpmic2_lp_set_voltage)
	*(.text.stpmic2_handle_irq)
	*(.text.fdt32_to_cpu)
	*(.text.pmic_init)
	*(.text.atomic_stm32mp2_stpmic2_notif)
	*(.text.unlock_pmic_access)
	*(.text.lock_pmic_access)
	*(.text.stm32_pmic2_apply_pm_state)
	*(.text.stm32_pmic2_resume_regulator)
	*(.text.stpmic2_irq_callback)
	*(.text.stm32_stpmic2_is_present)
	*(.text.etzpc_do_lock_decprot)
	*(.text.etzpc_do_lock_tzma)
	*(.text.decprot_is_locked.isra.0)
	*(.text.etzpc_do_get_decprot.isra.0)
	*(.text.etzpc_do_configure_decprot)
	*(.text.etzpc_pm)
	*(.text.clk_disable_no_lock)
	*(.text.clk_enable_no_lock)
	*(.text.clk_is_enabled)
	*(.text.clk_enable)
	*(.text.clk_disable)
	*(.text.clk_get_rate)
	*(.text.clk_stm32_get_priv)
	*(.text.stm32_gate_is_enabled)
	*(.text.stm32_gate_wait_ready)
	*(.text.stm32_mux_set_parent)
	*(.text.stm32_div_set_value)
	*(.text.clock_id_to_clk)
	*(.text.save_pll34_state)
	*(.text.enable_kernel_clocks)
	*(.text.pll_start)
	*(.text.clk_stm32_get_rate_oscillateur)
	*(.text.__clk_enable)
	*(.text.__clk_disable)
	*(.text.stm32_clk_configure_mux)
	*(.text.clk_op_enable)
	*(.text.pll_compute_pllxcfgr1.constprop.0)
	*(.text.pll_output)
	*(.text.restore_pll34_state)
	*(.text.stm32mp1_read_pll_freq)
	*(.text.get_clock_rate)
	*(.text._stm32_clock_get_rate)
	*(.text.clk_op_compute_rate)
	*(.text.clk_op_is_enabled)
	*(.text.clk_op_disable)
	*(.text.pll1_config_from_opp_khz)
	*(.text.stm32_clock_pm)
	*(.text.stm32mp_rcc_clock_id_to_clk)
	*(.text.stm32_reset_system)
	*(.text.pinctrl_apply_state)
	*(.text.set_state)
	*(.text.regulator_disable)
	*(.text.regulator_refcnt_enable)
	*(.text.regulator_enable)
	*(.text.to_rstline)
	*(.text.stm32_reset_get_ops)
	*(.text.reset_deassert)
	*(.text.reset_assert)
	*(.text.scmi_smt_init_agent_channel)
	*(.text.__wdt_sm_handler)
	*(.text.rtc_is_a_leap_year)
	*(.text.console_putc)
	*(.text.console_flush)
	*(.text.register_serial_console)
	*(.text.call_callbacks)
	*(.text.pm_change_state)
	*(.text.register_pm_cb)
	*(.text.interrupt_get_main_chip)
	*(.text.interrupt_get_main_chip_may_fail)
	*(.text.interrupt_call_handlers)
	*(.text.multi_core_panic_it_handler)
	*(.text.__do_panic)
	*(.text.plat_trace_ext_puts)
	*(.text.trace_ext_puts)
	*(.text.trace_ext_get_thread_id)
	*(.text.trace_ext_get_core_id)
	*(.text.refcount_inc)
	*(.text.refcount_dec)
	*(.text.udelay)
	*(.text.mdelay)
	*(.text.tee_time_get_sys_time)
	*(.text.is_valid_conf_and_notnull_size)
	*(.text.core_is_buffer_inside)
	*(.text.ts_get_current_session_may_fail)
	*(.text.ts_get_current_session)
	*(.text.cv_signal.constprop.0)
	*(.text.__mutex_unlock.constprop.0)
	*(.text.__mutex_lock.constprop.0)
	*(.text.mutex_unlock)
	*(.text.mutex_lock)
	*(.text.mutex_pm_aware_lock)
	*(.text.mutex_pm_aware_unlock)
	*(.text.condvar_broadcast)
	*(.text.cpu_spin_lock_xsave_no_dldetect.constprop.0)
	*(.text.wq_wait_init_condvar)
	*(.text.wq_wait_final)
	*(.text.wq_wake_next)
	*(.text.wq_promote_condvar)
	*(.text.notif_rpc)
	*(.text.notif_wait)
	*(.text.notif_send_sync)
	*(.text.thread_check_canaries)
	*(.text.thread_lock_global)
	*(.text.thread_unlock_global)
	*(.text.thread_get_core_local)
	*(.text.thread_clr_boot_thread)
	*(.text.thread_get_tmp_sp)
	*(.text.thread_is_from_abort_mode)
	*(.text.thread_get_id_may_fail)
	*(.text.thread_is_for_pm)
	*(.text.thread_get_id)
	*(.text.thread_init_thread_core_local)
	*(.text.thread_get_tsd)
	*(.text.thread_get_ctx_regs)
	*(.text.thread_restore_foreign_intr)
	*(.text.mobj_phys_get_pa)
	*(.text.mobj_with_fobj_get_pa)
	*(.text.mobj_shm_get_pa)
	*(.text.mobj_shm_alloc)
	*(.text.mobj_get_pa)
	*(.text.vm_pa2va)
	*(.text.va_is_in_map)
	*(.text.find_map_by_type_and_pa)
	*(.text.find_map_by_va)
	*(.text.find_map_by_pa)
	*(.text._pbuf_is_inside)
	*(.text.mmu_unlock)
	*(.text.mmu_lock)
	*(.text.map_pa2va)
	*(.text.phys_to_virt.part.0)
	*(.text.core_mmu_get_ta_range)
	*(.text.core_mmu_nsec_ddr_is_defined)
	*(.text.core_pbuf_is)
	*(.text.core_mmu_set_entry)
	*(.text.core_mmu_unmap_pages)
	*(.text.virt_to_phys)
	*(.text.phys_to_virt)
	*(.text.phys_to_virt_io)
	*(.text.is_unpaged)
	*(.text.io_pa_or_va)
	*(.text.io_pa_or_va_secure)
	*(.text.pfree.isra.0)
	*(.text.tee_mm_free)
	*(.text.tee_mm_get_smem)
	*(.text.crc32_z)
	*(.text.crc32)
	*(.text.fdt32_ld)
	*(.text.fdt_ro_probe_)
	*(.text.fdt_offset_ptr)
	*(.text.fdt_next_tag)
	*(.text.fdt_check_node_offset_)
	*(.text.fdt_check_prop_offset_)
	*(.text.nextprop_)
	*(.text.fdt_get_property_by_offset_)
	*(.text.fdt_get_string)
	*(.text.fdt_first_property_offset)
	*(.text.fdt_next_property_offset)
	*(.text.fdt_get_property_namelen_)
	*(.text.fdt_getprop_namelen)
	*(.text.fdt_getprop)
	*(.text.bget)
	*(.text.raw_memalign.part.0)
	*(.text.bgetz)
	*(.text.brel)
	*(.text.raw_malloc)
	*(.text.raw_free)
	*(.text.free_helper)
	*(.text.raw_calloc)
	*(.text.raw_realloc)
	*(.text.malloc)
	*(.text.calloc)
	*(.text.realloc)
	*(.text.free)
	*(.text.med3)
	*(.text.swapfunc)
	*(.text.qsort)
	*(.text.__stack_chk_fail)
	*(.text.strdup)
	*(.text.memchr)
	*(.text.memcmp)
	*(.text.memcpy)
	*(.text.memmove)
	*(.text.memset)
	*(.text.strcmp)
	*(.text.strlen)
	*(.text.strncmp)
	*(.text.__aeabi_ldivmod)
	*(.text.__aeabi_uldivmod)
	*(.text.ul_div_qr)
	*(.text.__ul_divmod)
	*(.text.__l_divmod)
	*(.text.__vsnprintf)
	*(.text.vsnprintk)
	*(.text.snprintk)
	*(.text.kprintf.constprop.0)
	*(.text.trace_vprintf)
	*(.text.trace_printf)
	*(.text.qsort_cmp_int)
	*(.text.qsort_int)
